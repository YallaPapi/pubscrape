/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
*  Copyright 2015 Adobe Systems Incorporated
*  All Rights Reserved.
*
* NOTICE:  All information contained herein is, and remains
* the property of Adobe Systems Incorporated and its suppliers,
* if any.  The intellectual and technical concepts contained
* herein are proprietary to Adobe Systems Incorporated and its
* suppliers and are protected by all applicable intellectual property laws,
* including trade secret and or copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe Systems Incorporated.
**************************************************************************/
import{sendAnalytics,sendAnalyticsOncePerMonth,getParsedJSON}from"../gsuite/util.js";import{getUserId,updateDrivePDFUrl}from"./util.js";import{processForListView}from"./list-view-touch-point-service.js";import state from"./state.js";import{addTouchpointToNativeViewerViaListView}from"./gmail-verb-list-view.js";const PDF_MIME_TYPE="application/pdf",DOCX_MIME_TYPE="application/vnd.openxmlformats-officedocument.wordprocessingml.document",DOC_MIME_TYPE="application/msword";let NON_PDF_MIME_TYPES=[],FILE_EXTENSION_TO_MIME_TYPE_MAP={};const getMimeTypeFromAttachmentName=e=>{if(!e)return null;const t=e.toLowerCase();for(const[e,s]of Object.entries(FILE_EXTENSION_TO_MIME_TYPE_MAP))if(t.endsWith(e))return s;return null},getAttachmentURL=e=>{let t=e.replace("&disp=safe","")+"&disp=inline";return getUserId()&&(t=t.replace("/mail/?",`/mail/u/${getUserId()}/?`)),t},processAttachmentByMimeType=(e,t,s,a,n)=>{const r=getAttachmentURL(s);if(e===PDF_MIME_TYPE)return void a.push({name:t,url:r});if(!NON_PDF_MIME_TYPES.includes(e))return void sendAnalyticsIfImageMimeTye(e);n.has(e)||n.set(e,{});const i=n.get(e);i[t]||(i[t]=[]),i[t].push({url:r})},acrobatMailDataHandler=e=>{let t;e?.detail?.url?.includes("/fd")?t=parseFDResponse(e?.detail?.responseData):e?.detail?.url?.includes("/i/s")?t=parseISResponse(e?.detail?.responseData):e?.detail?.url?.includes("/bv")?t=parseBVResponse(e?.detail?.responseData):e?.detail?.url?.includes("gmSetData")&&(t=parseGMSetData(e?.detail?.responseData,e?.detail?.key)),updateExistingThreadData(t,!0),state?.gmailConfig.acrobatTouchpointEnabled&&processForListView(),state?.gmailConvertToPdfConfig.enableConvertToPdfTouchpointInGmail&&addTouchpointToNativeViewerViaListView()},addMailDataEventListener=()=>{document.addEventListener("acrobat-mail-data",(e=>{setTimeout((()=>{acrobatMailDataHandler(e)}),0)}),{signal:state?.eventControllerSignal})},injectResponseListenerScript=()=>{if(state?.gmailResponseListenerAdded)return;const e=document.createElement("script");e.setAttribute("id","acrobat-response-interceptor"),e.src=chrome.runtime.getURL("content_scripts/gmail/gmail-inject.js"),e.onload=function(){this.remove()},(document.head||document.documentElement).appendChild(e),state.gmailResponseListenerAdded=!0},updateExistingThreadData=(e,t)=>{e&&Object.keys(e).forEach((s=>{const a=e[s].messages,n={id:s,messages:{...state.getMessagesForThreadId(s)||{},...a}};t?state.setDataForThread(n):e[e]=n}))},parseISAttachments=e=>{try{const t=new Map,s=[];if(Array.isArray(e))for(const a of e){const[e,n,,,,r]=a;processAttachmentByMimeType(e,n,r,s,t)}return{nonPDFAttachments:t,pdfAttachments:s}}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:ISAParsingFailed"]]),null}},processDriveAttachmentsByMimeType=(e,t,s,a,n)=>{const r=updateDrivePDFUrl(e);if(!r)return;const i={url:r,isDriveAsset:!0};if(n===PDF_MIME_TYPE)s.push({...i,name:t});else{a.has(n)||a.set(n,{});const e=a.get(n);e[t]||(e[t]=[]),e[t].push(i)}},parseISDriveAttachments=e=>{try{const t=new Map,s=[],a=e[12]?.[28];if(Array.isArray(a))for(let e of a)if(PDF_MIME_TYPE===e[4]&&e[1]?.toLowerCase().endsWith(".pdf"))processDriveAttachmentsByMimeType(e[3],e[1],s,t,e[4]);else{const a=getMimeTypeFromAttachmentName(e[1]);Object.values(FILE_EXTENSION_TO_MIME_TYPE_MAP).includes(a)&&processDriveAttachmentsByMimeType(e[3],e[1],s,t,a)}return{nonPDFDriveAttachments:t,driveAttachments:s}}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:ISDAParsingFailed"]]),null}},IMAGE_MIME_TYPE=["image/png","image/jpeg","image/webp"],sendAnalyticsIfImageMimeTye=e=>{!state?.analyticsForImageInAPIResponse&&IMAGE_MIME_TYPE.includes(e)&&(sendAnalyticsOncePerMonth("DCBrowserExt:Gmail:Image"),state.analyticsForImageInAPIResponse=!0)},parseFDAttachments=e=>{try{const t=new Map,s=[];if(Array.isArray(e))for(const a of e){const e=a[0]?.[3]||"";e?.length>0&&processAttachmentByMimeType(e[3],e[2],e[1],s,t)}return{nonPDFAttachments:t,pdfAttachments:s}}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:FDAParsingFailed"]]),null}},parseISEmailAndUpdateThreadData=(e,t,s)=>{if(e?.length>0)try{for(let a of e){const e=a[0],n=a[6],{nonPDFAttachments:r,pdfAttachments:i}=parseISAttachments(a[11]),{nonPDFDriveAttachments:o,driveAttachments:c}=parseISDriveAttachments(a);if(i?.length>0||r?.size>0||c?.length>0||o?.size>0){const l=a[71]&&9===a[71][0];t[s]||(t[s]={messages:{}}),t[s].messages[e]={id:e,timestamp:n,deleted:l,attachments:i,nonPDFAttachments:r,driveAttachments:c,nonPDFDriveAttachments:o}}}}catch(e){sendAnalytics([["DCBrowserExt:Gmail:ISEmailsParsingFailed"]])}},parseGMSetData=(e,t)=>{try{const s=getParsedJSON(e);if(!Array.isArray(s))return null;const a="Cl6csf"===t?s[1]:s[0]?.[0];if(!a||!Array.isArray(a))return null;const n={};for(let e of a)if("Cl6csf"===t){const t=e[1]?.[3],s=e[1]?.[4];parseISEmailAndUpdateThreadData(s,n,t)}else{const t=e[1],s=e[4]?.[4];parseGMSetDataA6JDVEmails(s,n,t)}return n}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:GMResponseParsingFailed"]]),null}},parseBVResponse=e=>{try{const t=getParsedJSON(e);if(!Array.isArray(t))return null;const s={},a=t[2];if(!a||!Array.isArray(a))return null;for(let e of a){const t=e[0][3],a=e[0]?.[4];parseISEmailAndUpdateThreadData(a,s,t)}return s}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:BVResponseParsingFailed"]]),null}},parseISResponse=e=>{try{const t=getParsedJSON(e);if(!Array.isArray(t))return null;const s=t[1]?.[5];if(!s||!Array.isArray(s))return null;const a={};for(let e of s){const t=e[0]?.[0],s=e[0]?.[2]?.[6]?.[0]?.[4];parseISEmailAndUpdateThreadData(s,a,t)}return a}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:ISResponseParsingFailed"]]),null}},domParser="undefined"!=typeof DOMParser&&new DOMParser,parseFDDriveAttachments=e=>{try{const t=[],s=new Map,a=e[1]?.[5]?.[1]?.[0]?.[2]?.[1];if(a&&a.includes("drive.google.com")){const e=domParser?.parseFromString(a,"text/html"),n=e?.querySelectorAll(".gmail_chip.gmail_drive_chip>a");if(n?.length>0)for(let e of n){const a=e.getAttribute("href"),n=e.querySelector("span")?.textContent;if(n?.toLowerCase().endsWith(".pdf"))processDriveAttachmentsByMimeType(a,n,t,s,PDF_MIME_TYPE);else{const e=getMimeTypeFromAttachmentName(n);Object.values(FILE_EXTENSION_TO_MIME_TYPE_MAP).includes(e)&&processDriveAttachmentsByMimeType(a,n,t,s,e)}}}return{driveAttachments:t,nonPDFDriveAttachments:s}}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:FDDAParsingFailed"]]),null}},parseA6JDVDriveAttachments=e=>{try{let t=new Map,s=[];const a=e[12]?.[28];if(Array.isArray(a))for(let e of a)if(e[4]===PDF_MIME_TYPE&&e[1]?.toLowerCase().endsWith(".pdf"))processDriveAttachmentsByMimeType(e[3],e[1],s,t,e[4]);else{const a=getMimeTypeFromAttachmentName(e[4]);Object.values(FILE_EXTENSION_TO_MIME_TYPE_MAP).includes(a)?processDriveAttachmentsByMimeType(e[3],e[1],s,t,a):sendAnalyticsIfImageMimeTye(e[4])}return{nonPDFDriveAttachments:t,driveAttachments:s}}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:A6JDVDriveAttParsingFailed"]]),null}},parseA6JDVAttachments=e=>{try{let t=new Map,s=[];if(Array.isArray(e[11]))for(const[a,n,,,,r]of e[11])processAttachmentByMimeType(a,n,r,s,t);return{nonPDFAttachments:t,pdfAttachments:s}}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:A6JDVAttParsingFailed"]]),null}},parseGMSetDataA6JDVEmails=(e,t,s)=>{if(e&&Array.isArray(e))try{for(let a of e){const e=a[0],n=a[6],{nonPDFAttachments:r,pdfAttachments:i}=parseA6JDVAttachments(a),{nonPDFDriveAttachments:o,driveAttachments:c}=parseA6JDVDriveAttachments(a);if(i?.length>0||r?.size>0||c?.length>0||o?.size>0){const l=9===a[71]?.[0];t[s]||(t[s]={messages:{}}),t[s].messages[e]={id:e,attachments:i,nonPDFAttachments:r,driveAttachments:c,nonPDFDriveAttachments:o,timestamp:n,deleted:l}}}}catch(e){sendAnalytics([["DCBrowserExt:Gmail:GMSetDataA6JDV"]])}},parseFDEmailAndUpdateThreadData=(e,t,s)=>{if(Array.isArray(e))try{for(let a of e){const e=a[0],{nonPDFAttachments:n,pdfAttachments:r}=parseFDAttachments(a[1]?.[13]),{nonPDFDriveAttachments:i,driveAttachments:o}=parseFDDriveAttachments(a);if(r?.length>0||n?.size>0||o?.length>0||i?.size>0){const c=a[1]&&a[1][38]&&9===a[1][38][0];t[s]||(t[s]={messages:{}}),t[s].messages[e]={id:e,attachments:r,nonPDFAttachments:n,driveAttachments:o,nonPDFDriveAttachments:i,timestamp:a[1]?.[16],deleted:c}}}}catch(e){sendAnalytics([["DCBrowserExt:Gmail:FDEmailsParsingFailed"]])}},parseFDResponse=e=>{try{const t={},s=getParsedJSON(e);if(!Array.isArray(s))return null;const a=s[1];if(!a||!Array.isArray(a))return null;for(let e of a){const s=e[0],a=e[2];parseFDEmailAndUpdateThreadData(a,t,s)}return t}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:FDResponseParsingFailed"]]),null}},init=()=>{const{gmailConfig:e,gmailConvertToPdfConfig:t}=state,s=e.enableGmailTouchPoint,a=t.enableConvertToPdfTouchpointInGmail;if(a){const e=t.metadata.fileExtToMimeTypeMap;NON_PDF_MIME_TYPES=Object.values(e),FILE_EXTENSION_TO_MIME_TYPE_MAP=e}(s||a)&&(injectResponseListenerScript(),addMailDataEventListener())};export{init};