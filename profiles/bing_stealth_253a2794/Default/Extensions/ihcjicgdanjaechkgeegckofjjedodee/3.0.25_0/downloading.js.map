{"version":3,"file":"downloading.js","mappings":"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","sources":["webpack://browser-guard/./node_modules/@sentry/core/esm/utils/spanUtils.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/debug-build.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/misc.js","webpack://browser-guard/./node_modules/@sentry/core/esm/session.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/worldwide.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/logger.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/browser.js","webpack://browser-guard/./node_modules/@sentry/core/esm/scope.js","webpack://browser-guard/./node_modules/@sentry/core/esm/utils/getRootSpan.js","webpack://browser-guard/./guard-app/utils/polyfill.ts","webpack://browser-guard/./node_modules/@sentry/utils/esm/string.js","webpack://browser-guard/./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/normalize.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/memo.js","webpack://browser-guard/./node_modules/@sentry/core/esm/eventProcessors.js","webpack://browser-guard/./node_modules/@sentry/core/esm/utils/prepareEvent.js","webpack://browser-guard/./node_modules/@sentry/core/esm/version.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/syncpromise.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/object.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/is.js","webpack://browser-guard/./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js","webpack://browser-guard/./node_modules/ua-parser-js/src/ua-parser.js","webpack://browser-guard/./node_modules/@sentry/core/esm/exports.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/stacktrace.js","webpack://browser-guard/./node_modules/@sentry/core/esm/hub.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/time.js","webpack://browser-guard/./node_modules/@sentry/core/esm/debug-build.js","webpack://browser-guard/./node_modules/@sentry/core/esm/constants.js","webpack://browser-guard/webpack/bootstrap","webpack://browser-guard/webpack/runtime/amd options","webpack://browser-guard/webpack/runtime/define property getters","webpack://browser-guard/webpack/runtime/global","webpack://browser-guard/webpack/runtime/hasOwnProperty shorthand","webpack://browser-guard/webpack/runtime/publicPath","webpack://browser-guard/./configure-webpack.js","webpack://browser-guard/./node_modules/@sentry/core/esm/integration.js","webpack://browser-guard/./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack://browser-guard/./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/supports.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/vendor/supportsHistory.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/instrument/_handlers.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/instrument/history.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/dsn.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/envelope.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/error.js","webpack://browser-guard/./node_modules/@sentry/core/esm/baseclient.js","webpack://browser-guard/./node_modules/@sentry/core/esm/api.js","webpack://browser-guard/./node_modules/@sentry/core/esm/envelope.js","webpack://browser-guard/./node_modules/@sentry/core/esm/metrics/envelope.js","webpack://browser-guard/./node_modules/@sentry/core/esm/metrics/utils.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/debug-build.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/eventbuilder.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/helpers.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/client.js","webpack://browser-guard/./node_modules/@sentry/core/esm/utils/sdkMetadata.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/env.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/userfeedback.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/clientreport.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/instrument/console.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/instrument/dom.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/instrument/xhr.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/instrument/fetch.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/severity.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/url.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/integrations/dedupe.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/instrument/globalError.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/integrations/httpcontext.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/aggregate-errors.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/stack-parsers.js","webpack://browser-guard/./node_modules/@sentry/core/esm/transports/base.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/promisebuffer.js","webpack://browser-guard/./node_modules/@sentry/utils/esm/ratelimit.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/transports/utils.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/transports/fetch.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/transports/xhr.js","webpack://browser-guard/./node_modules/@sentry/browser/esm/sdk.js","webpack://browser-guard/./guard-app/utils/sentry/sentryInit.js","webpack://browser-guard/./node_modules/@sentry/core/esm/sdk.js","webpack://browser-guard/./guard-app/app/scripts/app-consts.js","webpack://browser-guard/./guard-app/utils/locales.ts","webpack://browser-guard/./guard-app/utils/utils.js","webpack://browser-guard/./guard-app/app/scripts/downloading-page.js"],"sourcesContent":["import { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\n\n// These are aligned with OpenTelemetry trace flags\nconst TRACE_FLAG_NONE = 0x0;\nconst TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nfunction spanToTraceContext(span) {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nfunction spanToTraceHeader(span) {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nfunction spanTimeInputToSeconds(input) {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nfunction spanToJSON(span) {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span) {\n  return typeof (span ).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nfunction spanIsSampled(span) {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n\nexport { TRACE_FLAG_NONE, TRACE_FLAG_SAMPLED, spanIsSampled, spanTimeInputToSeconds, spanToJSON, spanToTraceContext, spanToTraceHeader };\n//# sourceMappingURL=spanUtils.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger, originalConsoleMethods };\n//# sourceMappingURL=logger.js.map\n","import { isString } from './is.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\nexport { getComponentName, getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","import { isPlainObject, dateTimestampInSeconds, uuid4, logger } from '@sentry/utils';\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors.js';\nimport { updateSession } from './session.js';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /**\n   * Transaction Name\n   */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  /** The client on this scope */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n   static clone(scope) {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n   clone() {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n   setClient(client) {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n   getClient() {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext ;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n   getAttachments() {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n   getScopeData() {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n   applyToEvent(\n    event,\n    hint = {},\n    additionalEventProcessors = [],\n  ) {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n   captureException(exception, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n   captureMessage(message, level, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nfunction getGlobalScope() {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nfunction setGlobalScope(scope) {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n\nexport { Scope, getGlobalScope, setGlobalScope };\n//# sourceMappingURL=scope.js.map\n","/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nfunction getRootSpan(span) {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n\nexport { getRootSpan };\n//# sourceMappingURL=getRootSpan.js.map\n","// Define a unified type\ntype PolyBrowser = typeof chrome & typeof browser;\n\n// Set the global context to the window object if it exists, otherwise use self\nconst GLOBAL_CONTEXT = typeof window !== 'undefined' ? window : self;\n\n// Create a polyBrowser object\nconst polyBrowser: PolyBrowser = (GLOBAL_CONTEXT as any).chrome || GLOBAL_CONTEXT.browser || browser;\n\n// debug what user agent is being used and what is the browser\n\nlet idb: IDBFactory;\ntry {\n  idb = indexedDB || GLOBAL_CONTEXT.indexedDB;\n} catch (error:any) {\n  console.log(`Error initializing indexedDB: ${error.message}`);\n}\n\nconst performancePoly = performance || GLOBAL_CONTEXT.performance;\nconst URLPoly = URL || GLOBAL_CONTEXT.URL;\n\nexport {\n  polyBrowser as chrome,\n  idb as indexedDB,\n  performancePoly as performance,\n  URLPoly as URL,\n};\n","import { isVueViewModel, isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n","import { dropUndefinedKeys, arrayify } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext.js';\nimport { getRootSpan } from './getRootSpan.js';\nimport { spanToTraceContext, spanToJSON } from './spanUtils.js';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nfunction applyScopeDataToEvent(event, data) {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nfunction mergeScopeData(data, mergeData) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nfunction mergeAndOverwriteScopeData\n\n(data, prop, mergeVal) {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\nfunction applyDataToEvent(event, data) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event, breadcrumbs) {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event, sdkProcessingMetadata) {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event, span) {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event, fingerprint) {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n\nexport { applyScopeDataToEvent, mergeAndOverwriteScopeData, mergeScopeData };\n//# sourceMappingURL=applyScopeDataToEvent.js.map\n","import { isNaN, isVueViewModel, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\nexport { normalize, normalizeToSize, normalizeUrlToBase, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { SyncPromise, logger, isThenable, getGlobalSingleton } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nfunction addGlobalEventProcessor(callback) {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\nexport { addGlobalEventProcessor, getGlobalEventProcessors, notifyEventProcessors };\n//# sourceMappingURL=eventProcessors.js.map\n","import { uuid4, dateTimestampInSeconds, addExceptionMechanism, truncate, GLOBAL_OBJ, normalize } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors.js';\nimport { getGlobalScope, Scope } from '../scope.js';\nimport { mergeScopeData, applyScopeDataToEvent } from './applyScopeDataToEvent.js';\nimport { spanToJSON } from './spanUtils.js';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n  isolationScope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope, captureContext) {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nfunction parseEventHintOrCaptureContext(\n  hint,\n) {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint,\n) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\nconst captureContextKeys = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] ;\n\nfunction hintIsScopeContext(hint) {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key ));\n}\n\nexport { applyDebugIds, applyDebugMeta, parseEventHintOrCaptureContext, prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n","const SDK_VERSION = '7.120.3';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { logger } from './logger.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isParameterizedString, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel };\n//# sourceMappingURL=is.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getClient, getCurrentScope } from '../exports.js';\nimport { getRootSpan } from '../utils/getRootSpan.js';\nimport { spanToJSON, spanIsSampled } from '../utils/spanUtils.js';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nfunction getDynamicSamplingContextFromSpan(span) {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) ;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\nexport { getDynamicSamplingContextFromClient, getDynamicSamplingContextFromSpan };\n//# sourceMappingURL=dynamicSamplingContext.js.map\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.40\n   Copyright © 2012-2024 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.40',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS',\n        SUFFIX_BROWSER = ' Browser';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return map.hasOwnProperty('*') ? map['*'] : str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bop(?:rg)?x\\/([\\w\\.]+)/i                                          // Opera GX\n            ], [VERSION, [NAME, OPERA+' GX']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /\\b(?:mxbrowser|mxios|myie2)\\/?([-\\w\\.]*)\\b/i                       // Maxthon\n            ], [VERSION, [NAME, 'Maxthon']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,      \n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir\n            // Trident based\n            /(avant|iemobile|slim(?:browser|boat|jet))[\\/ ]?([\\d\\.]*)/i,        // Avant/IEMobile/SlimBrowser/SlimBoat/Slimjet\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Blink/Webkit/KHTML based                                         // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio/Dragon\n            /(heytap|ovi|115)browser\\/([\\d\\.]+)/i,                              // HeyTap/Ovi/115\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /quark(?:pc)?\\/([-\\w\\.]+)/i                                         // Quark\n            ], [VERSION, [NAME, 'Quark']], [\n            /\\bddg\\/([\\w\\.]+)/i                                                 // DuckDuckGo\n            ], [VERSION, [NAME, 'DuckDuckGo']], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI' + SUFFIX_BROWSER]], [\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihoobrowser\\/?([\\w\\.]*)/i                                       // 360\n            ], [VERSION, [NAME, '360']], [\n            /\\b(qq)\\/([\\w\\.]+)/i                                                // QQ\n            ], [[NAME, /(.+)/, '$1Browser'], VERSION], [\n            /(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [              // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345(?=browser|chrome|explorer))\\w*[\\/ ]?v?([\\w\\.]+)/i   // QQ/2345\n            ], [NAME, VERSION], [\n            /(lbbrowser|rekonq)/i,                                              // LieBao Browser/Rekonq\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n            /ome\\/([\\w\\.]+) \\w* ?(iron) saf/i,                                  // Iron\n            /ome\\/([\\w\\.]+).+qihu (360)[es]e/i                                  // 360\n            ], [VERSION, NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,                               // Twitter\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(wolvic|librewolf)\\/([\\w\\.]+)/i                                    // Wolvic/LibreWolf\n            ], [NAME, VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, [VERSION, /_/g, '.']], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]((?!sm-[lr])[-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Honor\n            /(?:honor)([-\\w ]+)[;\\)]/i\n            ], [MODEL, [VENDOR, 'Honor'], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n            /\\b(opd2\\d{3}a?) bui/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+; (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,                           // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // TCL\n            /droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\\w*(\\)| bui)/i\n            ], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [\n\n            // itel\n            /(itel) ((\\w+))/i\n            ], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, { 'tablet' : ['p10001l', 'w7001'], '*' : 'mobile' }]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // Energizer\n            /; (energy ?\\w+)(?: bui|\\))/i,\n            /; energizer ([\\w ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Energizer'], [TYPE, MOBILE]], [\n\n            // Cat\n            /; cat (b35);/i,\n            /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Cat'], [TYPE, MOBILE]], [\n\n            // Smartfren\n            /((?:new )?andromax[\\w- ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Smartfren'], [TYPE, MOBILE]], [\n\n            // Nothing\n            /droid.+; (a(?:015|06[35]|142p?))/i\n            ], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron/Infinix/Tecno/Micromax/Advan\n            /; (imo) ((?!tab)[\\w ]+?)(?: bui|\\))/i,                             // IMO\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(imo) (tab \\w+)/i,                                                 // IMO\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /\\b(sm-[lr]\\d\\d[05][fnuw]?s?)\\b/i                                   // Samsung Galaxy Watch\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // XR\n            ///////////////////\n\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /(pico) (4|neo3(?: link|pro)?)/i                                    // Pico\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /; (quest( \\d| pro)?)/i                                             // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /(arkweb)\\/([\\w\\.]+)/i                                              // ArkWeb\n            ], [NAME, VERSION], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna/Servo\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS/OpenHarmony\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","import { logger, uuid4, timestampInSeconds, isThenable, GLOBAL_OBJ } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getCurrentHub, runWithAsyncContext, getIsolationScope } from './hub.js';\nimport { makeSession, updateSession, closeSession } from './session.js';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent.js';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception,\n  hint,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nfunction captureEvent(event, hint) {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction configureScope(callback) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction addBreadcrumb(breadcrumb, hint) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nfunction setContext(name, context) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setExtras(extras) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setExtra(key, extra) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setTags(tags) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setTag(key, value) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setUser(user) {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\n\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nfunction withScope(\n  ...rest\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope ;\n      return callback(scope );\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nfunction withIsolationScope(callback) {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nfunction isInitialized() {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nfunction getCurrentScope() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nfunction startSession(context) {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nfunction endSession() {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nfunction captureSession(end = false) {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, captureSession, close, configureScope, endSession, flush, getClient, getCurrentScope, isInitialized, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startSession, startTransaction, withActiveSpan, withIsolationScope, withMonitor, withScope };\n//# sourceMappingURL=exports.js.map\n","import { node } from './node-stack-trace.js';\nexport { filenameIsInApp } from './node-stack-trace.js';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { isThenable, uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\nimport { SDK_VERSION } from './version.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n   constructor(\n    client,\n    scope,\n    isolationScope,\n      _version = API_VERSION,\n  ) {this._version = _version;\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n   bindClient(client) {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n   popScope() {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n   withScope(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n   getClient() {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client ;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n   getScope() {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n   getIsolationScope() {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n   getStack() {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n   setUser(user) {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n   setTags(tags) {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n   setExtras(extras) {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n   setTag(key, value) {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n   setExtra(key, extra) {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n   configureScope(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   run(callback) {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n   getIntegration(integration) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n   endSession() {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n   startSession(context) {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n   shouldSendDefaultPii() {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nfunction getIsolationScope() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getHubFromCarrier(carrier) {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getIsolationScope, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs };\n//# sourceMappingURL=time.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/\";","/* eslint-disable no-undef, camelcase */\n\n// bow: https://gist.github.com/thejohnfreeman/563337119e20d090ea2d22bee9b05a6b\nif (!chrome && !browser) {\n    window.chrome = chrome || window.chrome || window.browser;\n}\n\n__webpack_public_path__ = (chrome || window.chrome).runtime.getURL('');\n","import { arrayify, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { addGlobalEventProcessor } from './eventProcessors.js';\nimport { getClient } from './exports.js';\nimport { getCurrentHub } from './hub.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nfunction convertIntegrationFnToClass(\n  name,\n  fn,\n) {\n  return Object.assign(\n    function ConvertedIntegration(...args) {\n      return fn(...args);\n    },\n    { id: name },\n  ) ;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\nexport { addIntegration, afterSetupIntegrations, convertIntegrationFnToClass, defineIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) ;\n\nconst inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n)\n\n;\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, inboundFiltersIntegration };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports.js';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) ;\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { FunctionToString, functionToStringIntegration };\n//# sourceMappingURL=functiontostring.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { logger } from './logger.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { getGlobalObject } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW ).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=_handlers.js.map\n","import { fill } from '../object.js';\nimport '../debug-build.js';\nimport '../logger.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { supportsHistory } from '../vendor/supportsHistory.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet lastHref;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addHistoryInstrumentationHandler(handler) {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nexport { addHistoryInstrumentationHandler };\n//# sourceMappingURL=history.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { consoleSandbox, logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { makeDsn, logger, checkOrSetAlreadyCaught, isParameterizedString, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { getClient } from './exports.js';\nimport { getIsolationScope } from './hub.js';\nimport { setupIntegration, afterSetupIntegrations, setupIntegrations } from './integration.js';\nimport { createMetricEnvelope } from './metrics/envelope.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Indicates whether this client's integrations have been set up. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n   setupIntegrations(forceInitialize) {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n   init() {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n   getIntegrationById(integrationId) {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, eventOrCount) {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureAggregateMetrics(metricBucketItems) {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    scope,\n    isolationScope = getIsolationScope(),\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    if (event.spans) {\n      // We store the # of spans before processing in SDK metadata,\n      // so we can compare it afterwards to determine how many spans were dropped\n      const spanCountBefore = event.spans.length;\n      event.sdkProcessingMetadata = {\n        ...event.sdkProcessingMetadata,\n        spanCountBeforeProcessing: spanCountBefore,\n      };\n    }\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nfunction addEventProcessor(callback) {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n\nexport { BaseClient, addEventProcessor };\n//# sourceMappingURL=baseclient.js.map\n","import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { getSdkMetadataForEnvelopeHeader, dsnToString, createEnvelope, createEventEnvelopeHeaders } from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils.js';\n\n/**\n * Create envelope from a metric aggregate.\n */\nfunction createMetricEnvelope(\n  metricBucketItems,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems) {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n\nexport { createMetricEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Generate bucket key from metric properties.\n */\nfunction getBucketKey(\n  metricType,\n  name,\n  unit,\n  tags,\n) {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nfunction simpleHash(s) {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nfunction serializeMetricBuckets(metricBucketItems) {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nfunction sanitizeUnit(unit) {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nfunction sanitizeMetricKey(key) {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key) {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input) {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value) {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nfunction sanitizeTags(unsanitizedTags) {\n  const tags = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n\nexport { getBucketKey, sanitizeMetricKey, sanitizeTags, sanitizeUnit, serializeMetricBuckets, simpleHash };\n//# sourceMappingURL=utils.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { getClient } from '@sentry/core';\nimport { addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, isParameterizedString, normalizeToSize, extractExceptionKeysForMessage } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  message,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import '@sentry-internal/tracing';\nimport { withScope, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, addExceptionTypeValue, addExceptionMechanism } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { BaseClient, applySdkMetadata } from '@sentry/core';\nimport { getSDKSource, logger, createClientReportEnvelope, dsnToString } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { createUserFeedbackEnvelope } from './userfeedback.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { SDK_VERSION } from '../version.js';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\nexport { applySdkMetadata };\n//# sourceMappingURL=sdkMetadata.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\nexport { createUserFeedbackEnvelope };\n//# sourceMappingURL=userfeedback.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n","import { uuid4 } from '../misc.js';\nimport { fill, addNonEnumerableProperty } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nconst WINDOW = GLOBAL_OBJ ;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID;\nlet lastCapturedEventType;\nlet lastCapturedEventTargetId;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addClickKeypressInstrumentationHandler(handler) {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nfunction instrumentDOM() {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event) {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target )._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType, target) {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler,\n  globalListener = false,\n) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event) {\n  try {\n    return event.target ;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n\nexport { addClickKeypressInstrumentationHandler, instrumentDOM };\n//# sourceMappingURL=dom.js.map\n","import { isString } from '../is.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url) {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url ).toString();\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler, instrumentXHR };\n//# sourceMappingURL=xhr.js.map\n","import { fill } from '../object.js';\nimport { supportsNativeFetch } from '../supports.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(handler) {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response) => {\n          const finishedHandlerData = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error) => {\n          const erroredHandlerData = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nexport { addFetchInstrumentationHandler, parseFetchArgs };\n//# sourceMappingURL=fetch.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { defineIntegration, convertIntegrationFnToClass, getClient, addBreadcrumb } from '@sentry/core';\nimport { addConsoleInstrumentationHandler, addClickKeypressInstrumentationHandler, addXhrInstrumentationHandler, addFetchInstrumentationHandler, addHistoryInstrumentationHandler, getEventDescription, logger, htmlTreeAsString, getComponentName, severityLevelFromString, safeJoin, SENTRY_XHR_DATA_KEY, parseUrl } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable max-lines */\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) ;\n\nconst breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration)\n\n;\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client) {\n  return function addSentryBreadcrumb(event) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client,\n  dom,\n) {\n  return function _innerDomBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client) {\n  return function _consoleBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client) {\n  return function _xhrBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client) {\n  return function _fetchBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data = handlerData.fetchData;\n      const hint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response ;\n      const data = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client) {\n  return function _historyBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\nexport { Breadcrumbs, breadcrumbsIntegration };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) ;\n\nconst dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration)\n\n;\n\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe, dedupeIntegration };\n//# sourceMappingURL=dedupe.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalUnhandledRejectionInstrumentationHandler };\n//# sourceMappingURL=globalUnhandledRejection.js.map\n","import { defineIntegration, convertIntegrationFnToClass, getClient, captureEvent } from '@sentry/core';\nimport { addGlobalErrorInstrumentationHandler, isString, addGlobalUnhandledRejectionInstrumentationHandler, isPrimitive, isErrorEvent, getLocationHref, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) ;\n\nconst globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n)\n\n;\n\nfunction _installGlobalOnErrorHandler(client) {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client) {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e );\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error) {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error ;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions() {\n  const client = getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n\nexport { GlobalHandlers, globalHandlersIntegration };\n//# sourceMappingURL=globalhandlers.js.map\n","import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) ;\n\nconst httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration)\n\n;\n\nexport { HttpContext, httpContextIntegration };\n//# sourceMappingURL=httpcontext.js.map\n","import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration)\n\n;\n\nexport { LinkedErrors, linkedErrorsIntegration };\n//# sourceMappingURL=linkederrors.js.map\n","import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\nconst _browserApiErrorsIntegration = ((options = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) ;\n\nconst browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n)\n\n;\n\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original,)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch, browserApiErrorsIntegration };\n//# sourceMappingURL=trycatch.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, SentryError, logger, serializeEnvelope, updateRateLimits } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { isNativeFetch, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\nlet cachedFetchImpl = undefined;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nfunction clearCachedFetchImplementation() {\n  cachedFetchImpl = undefined;\n}\n\nexport { clearCachedFetchImplementation, getNativeFetchImplementation };\n//# sourceMappingURL=utils.js.map\n","import { createTransport } from '@sentry/core';\nimport { rejectedSyncPromise } from '@sentry/utils';\nimport { getNativeFetchImplementation, clearCachedFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { inboundFiltersIntegration, functionToStringIntegration, getIntegrationsToSetup, initAndBind, getReportDialogEndpoint, getCurrentHub, startSession, captureSession, getClient } from '@sentry/core';\nimport { stackParserFromStackParserOptions, supportsFetch, logger, addHistoryInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW, wrap as wrap$1 } from './helpers.js';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs.js';\nimport { dedupeIntegration } from './integrations/dedupe.js';\nimport { globalHandlersIntegration } from './integrations/globalhandlers.js';\nimport { httpContextIntegration } from './integrations/httpcontext.js';\nimport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nimport { browserApiErrorsIntegration } from './integrations/trycatch.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nconst defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nfunction getDefaultIntegrations(_options) {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations();\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\nconst showReportDialog = (\n  // eslint-disable-next-line deprecation/deprecation\n  options = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event) => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nfunction captureUserFeedback(feedback) {\n  const client = getClient();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n\nexport { captureUserFeedback, defaultIntegrations, forceLoad, getDefaultIntegrations, init, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","import * as Sentry from \"@sentry/browser\";\nimport {chrome} from \"../polyfill.ts\";\n\nexport function sentryInit(_options = {}) {\n    console.debug('sentryInit. ENVIRONMENT: ', ENVIRONMENT);\n    let params = {\n        dsn: \"https://708a324f1a7ec87a2658346fb4bb7586@o438337.ingest.sentry.io/4506062147551232\",\n        tracesSampleRate: 0.00025, // 0.05%\n        sampleRate: 0.005, // 0.05%\n        // Session Replay\n        replaysSessionSampleRate: 0, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n        replaysOnErrorSampleRate: 0,\n        // This variable is set in Webpack itself (see webpack.DefinePlugin)\n        enabled: ENVIRONMENT === 'production',\n        release: chrome.runtime.getManifest().version,\n        attachStacktrace: true,\n        ignoreErrors: [ // https://docs.sentry.io/platforms/javascript/configuration/filtering/\n            'Could not establish connection. Receiving end does not exist',\n            'No tab with id:',\n            'Failed to fetch',\n            'Corruption: block checksum mismatch',\n            'QuotaExceededError: Encountered full disk',            \n            'Non-Error promise rejection captured with value: IO error',\n            'FILE_ERROR_NO_SPACE',\n            'FILE_ERROR_IO',\n            'FILE_ERROR_FAILED',\n            'FILE_ERROR_ACCESS_DENIED',\n        ]\n    };\n    Sentry.init(params);\n    Sentry.getCurrentScope().setLevel(\"error\");\n}\n\nexport function sentryToggle(enabled) {\n    Sentry.getCurrentHub().getClient().getOptions().enabled = enabled;\n}\n","import { logger, consoleSandbox } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getCurrentScope } from './exports.js';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  initializeClient(client);\n}\n\n/**\n * Make the given client the current client.\n */\nfunction setCurrentClient(client) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const top = hub.getStackTop();\n  top.client = client;\n  top.scope.setClient(client);\n}\n\n/**\n * Initialize the client for the current scope.\n * Make sure to call this after `setCurrentClient()`.\n */\nfunction initializeClient(client) {\n  if (client.init) {\n    client.init();\n    // TODO v8: Remove this fallback\n    // eslint-disable-next-line deprecation/deprecation\n  } else if (client.setupIntegrations) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.setupIntegrations();\n  }\n}\n\nexport { initAndBind, setCurrentClient };\n//# sourceMappingURL=sdk.js.map\n","export const RELOAD_ON_CLOSE_PORT = 'RELOAD_ON_CLOSE_PORT';\nexport const MSG_ICON_REFRESH = 'MSG_ICON_REFRESH';\nexport const MSG_ICONS_REFRESH = 'MSG_ICONS_REFRESH';\n\nexport const EXCLUSION_MALWARE = 'EXCLUSION_MALWARE';\nexport const EXCLUSION_SCAMS = 'EXCLUSION_SCAMS';\nexport const EXCLUSION_ADS = 'EXCLUSION_ADS';\nexport const EXCLUSION_PUPS = 'EXCLUSION_PUPS';\nexport const EXCLUSION_TYPE_DOMAIN = 'domain';\nexport const GDPR_REMOVAL_FLAG = 'GDPR_REMOVAL_FLAG';\nexport const EXCLUSION_TYPE_DOMAIN_TEMPORARY = 'domain (temporary)';\nexport const BAD_PACKAGE_ERROR = \"BAD_PACKAGE_ERROR\"\nexport const MSG_CHECK_PERMISSION = \"MSG_CHECK_PERMISSION\"\nexport const MISSING_DATABASE_ERROR = \"MISSING_DATABASE_ERROR\"\nexport const LICENSE_FREE = 'LICENSE_FREE';\nexport const LICENSE_TRIAL = 'LICENSE_TRIAL';\nexport const LICENSE_PREMIUM = 'LICENSE_PREMIUM';\nexport const LICENSE_STATE_ENUM = Object.freeze({\n    LicenseStateUnknown: 0,\n    LicenseStateFree: 1,\n    LicenseStateTrial: 2,\n    LicenseStateTrialExpired: 3,\n    LicenseStateLicensed: 4,\n    LicenseStateLicenseExpired: 5,\n    LicenseStateLicenseGrace: 6\n});\nexport const PREMIUM_LICENSE_STATES = Object.freeze([2, 4, 6]);\nexport const SETTING_TELEMETRY_CONSENT = 'sendTelemetry';\nexport const SETTING_ADS = 'enableProtectionAds';\nexport const SETTING_GTLD = 'enableProtectionGtld';\nexport const SETTING_NATIVE_MESSAGING = 'enableNativeMessaging';\nexport const SETTING_MALWARE = 'enableProtectionMalware';\nexport const SETTING_SCAMS = 'enableProtectionScams';\nexport const SETTING_BLOCK_COUNT = 'enableBlockCountDisplay';\nexport const SETTING_KILLSWITCH = 'enableProtection';\nexport const SETTING_SKIMMER_PROTECTION = 'enableSkimmerProtection';\nexport const SETTING_VERBOSE_LOGGING = 'enableVerboseLogging';\nexport const SETTING_MONTHLY_NOTIFICATION = 'enableMonthlyNotification';\nexport const SETTING_MALICIOUS_NOTIFICATION = 'enableMaliciousNotification';\nexport const SETTING_BREACH_NOTIFICATION = 'enableBreachNotification';\nexport const SETTING_NEW_RELEASE_NOTIFICATION = 'enableNewReleaseNotification';\nexport const SETTING_SEARCH_HIJACKING_NOTIFICATION = 'enableSearchHijackingNotification';\nexport const SETTING_VISUAL_DEBUGGING = 'enableVisualDebugging';\nexport const SETTING_PING_TRACKER_REMOVER = 'enablePingTrackerRemover';\n\nexport const SETTING_FLAGS = {\n    [SETTING_KILLSWITCH]: 0x00000002, // Overall Protection status\n    [SETTING_ADS]: 0x00000004, // Ads/Trackers\n    [SETTING_MALWARE]: 0x00000008, // Malware\n    [SETTING_SCAMS]: 0x00000010, // Scams\n};\nexport const ALLOWED_EXCLUSION_OPTIONS = [\n    {\n        value: 2,\n        constantKey: EXCLUSION_ADS,\n        humanReadable: \"Ads / Trackers\"\n    },\n    {\n        value: 4,\n        constantKey: EXCLUSION_MALWARE,\n        humanReadable: \"Malware\"\n    },\n    {\n        value: 6,\n        constantKey: EXCLUSION_SCAMS,\n        humanReadable: \"Scams\"\n    },\n    {\n        value: 7,\n        constantKey: EXCLUSION_PUPS,\n        //Do not display PUPs label anymore\n        humanReadable: \"\"\n    }\n];\n\nexport const RELEASE_NOTIFICATION_DEAFULT_TEXT = 'Browser Guard has been updated!';\n\n//Change manually these release notes \nexport const RELEASE_NOTIFICATION_NOTES_MV3 = [\n    'Prevent fingerprinting of this extension',\n    'Favicon md5 heuristic detection',\n    'Misc bug fixes' // this should always exist and be the last one.\n];\n\n\n// Feature flags that are enabled/disabled by the FEATURE_FLAGS DB\nexport const FLAG_ENABLE_BLOCK_EASYLIST_ADS = 'enableBlockEasylistAds';\nexport const FLAG_ENABLE_BLOCK_GDPR = 'enableBlockGdpr';\nexport const FLAG_ENABLE_BLOCK_LOCAL_PORT_SCANNING = 'enableBlockLocalPortScanning';\nexport const FLAG_ENABLE_BLOCK_YOUTUBE_CUSTOM_ADS = 'enableBlockYoutubeCustomAds';\nexport const FLAG_ENABLE_BREACH_NOTIFICATION = 'enableBreachNotification';\nexport const FLAG_ENABLE_SEARCH_HIJACKING_NOTIFICATION = 'enableSearchHijackingNotification';\nexport const FLAG_ENABLE_HEURISTIC_BLOCKING = 'enableHeuristicBlocking';\nexport const FLAG_ENABLE_SUSPICIOUS_POST_OR_PUT_DETECTION = 'enableSuspiciousPostOrPutDetection';\nexport const FLAG_ENABLE_SUSPICIOUS_TITLE_DETECTION = 'enableSuspiciousTitleDetection';\nexport const FLAG_ENABLE_PING_TRACKER_REMOVER = 'enablePingTrackerRemover';\n\nexport const FLAG_ENABLE_PREMIUM = 'FLAG_ENABLE_PREMIUM';\nexport const UPDATE_DB_MAX_ATTEMPS = 4;\n\nexport const MSG_FIREFOX = 'MSG_FIREFOX';\nexport const MSG_UUID_GET = 'MSG_UUID_GET';\nexport const MSG_INT_VER = 'MSG_INT_VER';\nexport const MSG_USER_GROUP_GET = 'MSG_USER_GROUP_GET';\nexport const MSG_IS_ONBOARDING_COMPLETE = 'MSG_IS_ONBOARDING_COMPLETE';\nexport const MSG_WEBSITE_CHECKBOX_GET = 'MSG_WEBSITE_CHECKBOX_GET';\nexport const MSG_SETTINGS_GET = 'MSG_SETTINGS_GET';\nexport const MSG_SETTINGS_SET = 'MSG_SETTINGS_SET';\nexport const MSG_IS_PREMIUM = 'MSG_IS_PREMIUM';\nexport const MSG_IS_TRIAL = 'MSG_IS_TRIAL';\nexport const MSG_TAB_DATA_GET = 'MSG_TAB_DATA_GET';\nexport const MSG_RECORDS_GET = 'MSG_RECORDS_GET';\nexport const MSG_GET_ALL_STATS = 'MSG_GET_ALL_STATS';\nexport const MSG_DEBUG_ADD_STATS = 'MSG_DEBUG_ADD_STATS';\nexport const MSG_DEBUG_CLEAR_STATS = 'MSG_DEBUG_CLEAR_STATS';\nexport const MSG_ADD_ALLOW = 'MSG_ADD_ALLOW';\nexport const MSG_SET_ALLOW_GRANULAR = 'MSG_SET_ALLOW_GRANULAR';\nexport const MSG_GET_ALLOW_GRANULAR = 'MSG_GET_ALLOW_GRANULAR';\nexport const MSG_ADD_ALLOW_TEMPORARY = 'MSG_ADD_ALLOW_TEMPORARY';\nexport const MSG_ALLOW_TEMPORARILY = 'MSG_ALLOW_TEMPORARILY';\nexport const MSG_ADD_ALLOW_META_ONLY = 'MSG_ADD_ALLOW_META_ONLY';\nexport const MSG_REM_ALLOW_ALL = 'MSG_REM_ALLOW_ALL';\nexport const MSG_REM_ALLOW_DOMAIN = 'MSG_REM_ALLOW_DOMAIN';\nexport const MSG_REM_ALLOW_SINGLE = 'MSG_REM_ALLOW_SINGLE';\nexport const MSG_ALLOW_GET_ALL = 'MSG_ALLOW_GET_ALL';\nexport const MSG_ALLOW_GET_SINGLE = 'MSG_ALLOW_GET_SINGLE';\nexport const MSG_IS_LAYER_ACTIVE = 'MSG_IS_LAYER_ACTIVE';\nexport const MSG_DOWNLOAD_LOGS = 'MSG_DOWNLOAD_LOGS';\nexport const MSG_FORCE_DATABASE_UPDATE = 'MSG_FORCE_DATABASE_UPDATE';\nexport const MSG_TAB_ID_GET = 'MSG_TAB_ID_GET';\nexport const MSG_TAB_INFO_GET = 'MSG_TAB_INFO_GET';\nexport const MSG_GET_HEURISTICS_DATABASE = \"MSG_GET_HEURISTICS_DATABASE\";\nexport const MSG_IS_NEEDING_NATIVE_MSG = 'MSG_IS_NEEDING_NATIVE_MSG';\nexport const MSG_TOGGLE_NATIVE_MSG = 'MSG_TOGGLE_NATIVE_MSG';\nexport const MSG_BADGE_COUNT_UPDATE = 'MSG_BADGE_COUNT_UPDATE';\nexport const MSG_RECORD_ARW = 'MSG_RECORD_ARW';\nexport const MSG_IS_AD_PROTECTION_ACTIVE = 'MSG_IS_AD_PROTECTION_ACTIVE';\nexport const MSG_GET_BLOCKED_ITEMS = 'MSG_GET_BLOCKED_ITEMS';\nexport const MSG_DELETE_BLOCKED_ITEM = 'MSG_DELETE_BLOCKED_ITEM';\nexport const MSG_DELETE_ALL_BLOCKED_ITEMS = 'MSG_DELETE_ALL_BLOCKED_ITEMS';\nexport const MSG_TELEMETRY_EMAIL_SHOWN = 'MSG_TELEMETRY_EMAIL_SHOWN';\nexport const MSG_TELEMETRY_EMAIL_SENT = 'MSG_TELEMETRY_EMAIL_SENT';\nexport const MSG_TELEMETRY_EMAIL_FAILED = 'MSG_TELEMETRY_EMAIL_FAILED';\nexport const MSG_MV3_LAST_TAB_URL = 'MSG_MV3_LAST_TAB_URL';\nexport const PORT_FORCE_DATABASE_UPDATE = 'PORT_FORCE_DATABASE_UPDATE';\nexport const GROUP_A = 'GROUP_A';\nexport const MSG_RESET = 'MSG_RESET';\nexport const MSG_RECORD_CONTENT_AD = 'MSG_RECORD_CONTENT_AD';\nexport const MSG_RECORD_EASYLIST_AD = 'MSG_RECORD_EASYLIST_AD';\nexport const MSG_RECORD_EASYLIST_PRIVACY = 'MSG_RECORD_EASYLIST_PRIVACY';\nexport const MSG_MV3_TOGGLE_PROTECTION = 'MSG_MV3_TOGGLE_PROTECTION';\nexport const MSG_MV3_TOGGLE_INDIVIDUAL_PROTECTION = 'MSG_MV3_TOGGLE_INDIVIDUAL_PROTECTION';\nexport const MSG_MV3_TOGGLE_GTLD_PROTECTION = 'MSG_MV3_TOGGLE_GTLD_PROTECTION';\nexport const MV3_PROTECTION_ADS = 'MV3_ADS';\nexport const MV3_PROTECTION_MALWARE = 'MV3_MALWARE';\nexport const MV3_PROTECTION_SCAMS = 'MV3_SCAMS';\nexport const SETTING_MV3_ENABLED_FEATURES = 'MV3_ENABLED_FEATURES';\nexport const MV3_FEATURE_ALL = 'MV3_FEATURE_ALL';\nexport const MV3_FEATURE_ADS_TRACKERS = 'ADS_TRACKERS';\nexport const MV3_FEATURE_EASYLIST = 'EASYLIST';\nexport const MV3_FEATURE_EASYLIST_PRIVACY = 'EASYLIST_PRIVACY';\nexport const MV3_FEATURE_MALWARE = 'MALWARE';\nexport const MV3_FEATURE_MONTHLY_NOTIFICATIONS = 'MONTHLY_NOTIFICATIONS ';\nexport const MV3_FEATURE_MALICIOUS_NOTIFICATIONS = 'MALICIOUS_NOTIFICATIONS';\nexport const MV3_FEATURE_NEW_RELEASE_NOTIFICATIONS = 'NEW_RELEASE_NOTIFICATIONS';\nexport const MV3_FEATURE_BREACH_NOTIFICATIONS = 'BREACH_NOTIFICATIONS';\nexport const MV3_FEATURE_SEARCH_HIJACKING_NOTIFICATIONS = 'SEARCH_HIJACKING_NOTIFICATIONS';\nexport const MSG_BREACH_NOTIFICATION = 'MSG_BREACH_NOTIFICATION';\nexport const MSG_MV3_INIT_WITH_IDS = 'MSG_MV3_INIT_WITH_IDS';\nexport const MSG_MV3_POST_NATIVE_EXCLUSION = 'MSG_MV3_POST_NATIVE_EXCLUSION';\nexport const MSG_INFO_BLOCKED_CONTENT = 'MSG_INFO_BLOCKED_CONTENT';\nexport const MSG_INFO_BLOCKED_CONTENT_DISPLAYED = 'MSG_INFO_BLOCKED_CONTENT_DISPLAYED';\nexport const MSG_INFO_BREACH_NOTIFICATION_DISPLAYED = 'MSG_INFO_BREACH_NOTIFICATION_DISPLAYED';\nexport const MSG_INFO_MONTHLY_NOTIFICATION = 'MSG_INFO_MONTHLY_NOTIFICATION';\nexport const MSG_INFO_RELEASE_NOTIFICATION = 'MSG_INFO_RELEASE_NOTIFICATION';\nexport const MSG_TOGGLE_VERBOSE_LOGGING = 'MSG_TOGGLE_VERBOSE_LOGGING';\nexport const MSG_CONTENT_CONTROL_GET_ALL = 'MSG_CONTENT_CONTROL_GET_ALL';\nexport const MSG_CONTENT_CONTROL_REMOVE_ITEM = 'MSG_CONTENT_CONTROL_REMOVE_ITEM';\nexport const MSG_CONTENT_CONTROL_ADD_ITEM = 'MSG_CONTENT_CONTROL_ADD_ITEM';\nexport const MSG_CONTENT_CONTROL_REMOVE_ALL = 'MSG_CONTENT_CONTROL_REMOVE_ALL';\nexport const MSG_DETECTION_HISTORY_GET_ALL = 'MSG_DETECTION_HISTORY_GET_ALL';\nexport const MSG_DETECTION_HISTORY_ADD_ITEM = 'MSG_DETECTION_HISTORY_ADD_ITEM';\nexport const MSG_DETECTION_HISTORY_REMOVE_ALL = 'MSG_DETECTION_HISTORY_REMOVE_ALL';\nexport const MSG_DETECTION_HISTORY_REMOVE_ITEM = 'MSG_DETECTION_HISTORY_REMOVE_ITEM';\nexport const MSG_IS_NEW_FEATURE_SEEN = 'MSG_IS_NEW_FEATURE_SEEN';\nexport const MSG_MARK_NEW_FEATURE_SEEN = 'MSG_MARK_NEW_FEATURE_SEEN';\nexport const FEAT_CONTENT_CONTROLS = 'contentControls';\nexport const FEAT_EXPORT_IMPORT = 'exportImport';\nexport const MSG_EXPORT_SETTINGS = 'MSG_EXPORT_SETTINGS';\nexport const MSG_IMPORT_SETTINGS = 'MSG_IMPORT_SETTINGS';\nexport const MSG_IS_WHITELISTED_SCAM = 'MSG_IS_WHITELISTED_SCAM';\nexport const MSG_DEBUG_TEST_CHANNEL = 'MSG_DEBUG_TEST_CHANNEL';\nexport const MSG_DEBUG_CHECK_URL = 'MSG_DEBUG_CHECK_URL';\nexport const MSG_DEBUG_ADD_HEURISTIC_RULE = 'MSG_DEBUG_ADD_HEURISTIC_RULE';\nexport const MSG_DEBUG_STAGING_CHANNEL = 'MSG_DEBUG_STAGING_CHANNEL';\nexport const MSG_DEBUG_STAGING_CHANNEL_RESPONSE = 'MSG_DEBUG_STAGING_CHANNEL_RESPONSE';\nexport const MSG_DEBUG_UPDATE_ERROR = 'MSG_DEBUG_UPDATE_ERROR';\nexport const MSG_COLOR_SCHEME_CHANGED = 'MSG_COLOR_SCHEME_CHANGED';\nexport const MSG_QUERY_FEATURE_FLAG = 'MSG_QUERY_FEATURE_FLAG';\nexport const MSG_LOAD_INLINE_SCRIPT = 'MSG_LOAD_INLINE_SCRIPT';\nexport const MSG_GET_EASYLIST_SELECTORS = 'MSG_GET_EASYLIST_SELECTORS';\nexport const MSG_GET_HEURISTICS_URLS_TO_BLOCK = 'MSG_GET_HEURISTICS_URLS_TO_BLOCK';\nexport const MSG_QUERY_EASYLIST = 'MSG_QUERY_EASYLIST';\nexport const MSG_IS_EXCLUDED = \"isExcluded\";\nexport const MSG_DETECTION = \"detection\";\nexport const MSG_TELEMETRY_PHISHING_TUNNEL = \"telemetryPhishingTunnel\";\nexport const MSG_CONTEXT_MENU_TARGET_URLS = \"context-menu-target-urls\";\nexport const MSG_UPDATE_PROTECTION_ON_PERM_CHANGE = \"MSG_UPDATE_PROTECTION_ON_PERM_CHANGE\";\nexport const SHOW_PERMISSION_REQUEST_ALARM = \"showPermissionRequestAlarm\";\nexport const IS_URL_PERM_REMOVED_FLAG = \"IS_URL_PERM_REMOVED_FLAG\";\nexport const MSG_CLOSE_POPUP = \"MSG_CLOSE_POPUP\";\nexport const MSG_RECORD_PING_TRACKER_REMOVAL = \"MSG_RECORD_PING_TRACKER_REMOVAL\";\nexport const MSG_CHECK_ALLOW_LIST_BY_TYPE_AND_DOMAIN = 'MSG_CHECK_ALLOW_LIST_BY_TYPE_AND_DOMAIN';\nexport const MSG_CHECK_DOMAIN_ALLOW_LIST_RESPONSE = 'MSG_CHECK_DOMAIN_ALLOW_LIST_RESPONSE';\nexport const MSG_CHECK_DOMAIN_ALLOW_LIST = 'MSG_CHECK_DOMAIN_ALLOW_LIST';\nexport const MSG_APPEND_CONSOLE_LOG = \"MSG_APPEND_CONSOLE_LOG\";\nexport const MSG_TEST_MY_ACCOUNT_RESPONSE = 'MSG_TEST_MY_ACCOUNT_RESPONSE';\nexport const MSG_TEST_FP_CHECKER = 'MSG_TEST_FP_CHECKER';\nexport const RecordType = {\n    AD: 'AD',\n    MALWARE: 'MALWARE',\n    SCAM: 'SCAM',\n    CONTENT: 'CONTENT',\n};\nexport const ATTRIBUTION_REPORTING = 'googleattributionreport';\nexport const HEURISTIC_AD_BLOCK = 'heuristic-ad-block';\nexport const EASYLIST_AD_BLOCK = 'easylist-ad-block';\nexport const EASYLIST_PRIVACY_BLOCK = 'easylist-privacy-block';\nexport const MSG_IS_ATTR_REPORTING_ACTIVE = 'MSG_IS_ATTR_REPORTING_ACTIVE';\nexport const MSG_IS_PING_TRACKER_REMOVER_ACTIVE = 'MSG_IS_PING_TRACKER_REMOVER_ACTIVE';\nexport const PERM_LAST_DISPLAYED_MEMORY_VAR = 'permNotificationLastDisplayed';\nexport const PING_TRACKER = 'pingtracker';\n\n\n\n/*      RESOURCE PATHES     */\nexport const RESOURCE_CONTENT_STYLE = \"app/content-style.css\";\n\n\n/*      CSS CLASSES     */\nexport const CSS_DISPLAY_NONE = 'A2O4W8X6IK';\nexport const CSS_DISPLAY_VISUAL_DEBUGGING_EL_GENERIC = 'B2O4W8X6IL'; // easylist visual debugging generic items\nexport const CSS_DISPLAY_VISUAL_DEBUGGING_EL_SPECIFIC = 'C2O4W8X6IM'; // easylist visual debugging site specific items\nexport const CSS_DISPLAY_VISUAL_DEBUGGING_HE = 'D2O4W8X6IN'; // heuristics visual debugging\nexport const CSS_GLOBAL_NOTIFICATION = 'mb-global-notification';\nexport const CSS_NOTIFICATION_INFO = 'mb-global-info';\nexport const CSS_NOTIFICATION_WARNING = 'mb-global-warning';\n\nexport const THREAT_TYPES = Object.freeze({\n    MALWARE: Object.freeze({\n        type: 'malware',\n        FULL_URL_MALWARE: 'full-url-malware',\n        SUSPICIOUS_PAGE: 'suspiciousPage',\n        SUSPICIOUS_TLD: 'suspiciousTLD',\n        RISKY_PATTERN: 'riskyPattern',\n        SUSPICIOUS_CONTENT: 'suspiciousContent',\n        MALWARE_PATTERN: 'malware-pattern',\n        ALERT_LOOP: 'alertLoop',\n        AUTH_REQUIRED_LOOP: 'authRequiredLoop',\n        CREATE_URL_LOOP: 'createURLLoop',\n        EXTENSION_INSTALL: 'extensionInstall',\n        FULL_SCREEN_LOOP: 'fullScreenLoop',\n        HISTORY_LOOP: 'historyLoop',\n        NOTIFICATION_LOOP: 'notificationLoop',\n        PRINT_LOOP: 'printLoop',\n        ADWARE: 'adware',\n        REPUTATION: 'reputation',\n        TROJAN: 'trojan',\n        MALVERTISING: 'malvertising',\n        WORM: 'worm',\n        RANSOMWARE: 'ransomware',\n        ROOTKIT: 'rootkit',\n        BACKDOOR: 'backdoor',\n        SPYWARE: 'spyware',\n        ALLOWED_EXCLUSION_VALUE: 4,\n    }),\n    SCAM: Object.freeze({\n        type: 'scam',\n        TSS: 'tss',\n        SCAM_HEURISTIC: 'scam_heuristic',\n        ALLOWED_EXCLUSION_VALUE: 6,\n\n    }),\n    PHISHING: Object.freeze({\n        type: 'phishing',\n        PHISHING_SUSPICIOUS_POST: 'phishing_suspicious_post',\n        PHISHING_BANKING: 'phishing_banking',\n        PHISHING_LOGIN: 'phishing_login',\n        PHISHING_LOGIN_VIA_TUNNEL: 'phishing_login_via_tunnel',\n        TELEMETRY_PHISHING_TUNNEL: 'telemetryPhishingTunnel',\n    }),\n    AD: Object.freeze({\n        type: 'ad',\n        ADSERVER: 'adserver',\n        ALLOWED_EXCLUSION_VALUE: 2,\n    }),\n    ADS: Object.freeze({\n        type: 'ads',\n        ADSERVER: 'adserver',\n        ALLOWED_EXCLUSION_VALUE: 2,\n    }),\n});\n\nexport const BROWSERS = Object.freeze({\n    CHROME: 'Chrome',\n    FIREFOX: 'Firefox',\n    OPERA: 'Opera',\n    EDGE: 'Edge',\n    SAFARI: 'Safari',\n});\n\nexport const DEFAULT_PERMISSIONS = Object.freeze({\n    origins: [\"<all_urls>\"],\n    permissions: [], // All permissions - to be filled.\n    optional_permissions: [] // All optional permissions - to be filled.\n});\n\n/*      ALLOWED EXPORTED SETTINGS     */\nexport const ALLOWED_EXPORTED_SETTINGS = {\n    version: \"3.0.0\",\n    allowList: {},\n    blockedItems: [],\n    contentControls: [],\n    settings: {\n        enableBlockCountDisplay: true,\n        enableMaliciousNotification: true,\n        enableMonthlyNotification: true,\n        enableNewReleaseNotification: true,\n        enableProtection: true,\n        enableProtectionAds: true,\n        enableProtectionMalware: true,\n        enableProtectionScams: true,\n        enableSkimmerProtection: true,\n        showReleaseNotificationFlag: true,\n        enableProtectionGtld: false,\n        enableVerboseLogging: false,\n    }\n}\n\n/*\n    Standard CSS selectors, the separator is ##.\n    Extended CSS pseudo-selectors, the separator is #?#.\n */\n\nexport const ruleSeparatorRegex = /^(.*?)(##|#\\?#)(.+)$/\nexport const ruleSeparatorRegexInstance = new RegExp(ruleSeparatorRegex)\n\nexport const BROWSER_PERMISSIONS = Object.freeze({\n    Chrome: Object.freeze({\n        origins: [],\n        permissions: [ // this inlcudes all permissions, required and optional\n            \"alarms\",\n            \"downloads\",\n            \"storage\",\n            \"tabs\",\n            \"declarativeNetRequest\",\n            \"declarativeNetRequestFeedback\",\n            \"unlimitedStorage\",\n            \"webRequest\",\n            \"contextMenus\",\n            \"nativeMessaging\",\n            \"offscreen\",\n            \"activeTab\",\n            \"clipboardRead\",\n            \"clipboardWrite\"\n        ]\n    }),\n    Firefox: Object.freeze({\n        origins: [],\n        permissions: [ // this inlcudes all permissions, required and optional\n            \"alarms\",\n            \"downloads\",\n            \"storage\",\n            \"tabs\",\n            \"declarativeNetRequest\",\n            \"declarativeNetRequestFeedback\",\n            \"unlimitedStorage\",\n            \"webRequest\",\n            \"webRequestBlocking\",\n            \"contextMenus\",\n            \"nativeMessaging\",\n            \"activeTab\",\n            \"clipboardRead\",\n            \"clipboardWrite\"\n        ]\n    }),\n    Edge: Object.freeze({\n        origins: [],\n        permissions: [ // this inlcudes all permissions, required and optional\n            \"alarms\",\n            \"downloads\",\n            \"nativeMessaging\",\n            \"storage\",\n            \"tabs\",\n            \"webRequest\",\n            \"declarativeNetRequest\",\n            \"declarativeNetRequestFeedback\",\n            \"unlimitedStorage\",\n            \"contextMenus\",\n            \"offscreen\",\n            \"clipboardRead\",\n            \"clipboardWrite\"\n        ]\n    }),\n    Safari: Object.freeze({\n        origins: [],\n        permissions: []\n    })\n});\n\n\n// the pruposse of this object is to have a human readable title and description for each permission\nexport const PERMISSIONS_CONTROL_CAROUSEL = Object.freeze({\n    clipboardRead: {\n        title: \"clipboardReadPermTitle\",\n        description: \"clipboardReadPermDesc\"\n    },\n    clipboardWrite: {\n        title: \"clipboardWritePermTitle\",\n        description: \"clipboardWritePermDesc\"\n    },\n    alarms: {\n        title: \"alarms\",\n        description: \"alarms\"\n    },\n    downloads: {\n        title: \"downloads\",\n        description: \"downloads\"\n    },\n    storage: {\n        title: \"storage\",\n        description: \"storage\"\n    },\n    tabs: {\n        title: \"tabs\",\n        description: \"tabs\"\n    },\n    declarativeNetRequest: {\n        title: \"declarativeNetRequest\",\n        description: \"declarativeNetRequest\"\n    },\n    declarativeNetRequestFeedback: {\n        title: \"declarativeNetRequestFeedback\",\n        description: \"declarativeNetRequestFeedback\"\n    },\n    unlimitedStorage: {\n        title: \"unlimitedStorage\",\n        description: \"unlimitedStorage\"\n    },\n    webRequest: {\n        title: \"webRequest\",\n        description: \"webRequest\"\n    },\n    contextMenus: {\n        title: \"contextMenus\",\n        description: \"contextMenus\"\n    },\n    nativeMessaging: {\n        title: \"nativeMessaging\",\n        description: \"nativeMessaging\"\n    },\n    offscreen: {\n        title: \"offscreen\",\n        description: \"offscreen\"\n    },\n    activeTab: {\n        title: \"activeTab\",\n        description: \"activeTab\"\n    },\n});\n\n// List of domains that are always allowed, even if Research deliberate tries to block them.\nexport const ALWAYS_ALLOW = {\n    'amazon.com': true, 'www.amazon.com': true,\n    'baidu.com': true, 'www.baidu.com': true,\n    'bilibili.com': true, 'www.bilibili.com': true,\n    'bing.com': true, 'www.bing.com': true,\n    'cnn.com': true, 'www.cnn.com': true,\n    'discord.com': true, 'www.discord.com': true,\n    'discordapp.com': true, 'www.discordapp.com': true,\n    'ebay.com': true, 'www.ebay.com': true,\n    'facebook.com': true, 'www.facebook.com': true,\n    'foxnews.com': true, 'www.foxnews.com': true,\n    'google.com': true, 'www.google.com': true,\n    'instagram.com': true, 'www.instagram.com': true,\n    'linkedin.com': true, 'www.linkedin.com': true,\n    'live.com': true, 'www.live.com': true,\n    'mail.ru': true, 'www.mail.ru': true,\n    'malwarebytes.com': true, 'www.malwarebytes.com': true,\n    'mbamupdates.com': true, 'www.mbamupdates.com': true,\n    'microsoft.com': true, 'www.microsoft.com': true,\n    'microsoftonline.com': true, 'www.microsoftonline.com': true,\n    'mozilla.com': true, 'www.mozilla.com': true,\n    'msn.com': true, 'www.msn.com': true,\n    'mwbsys.com': true, 'www.mwbsys.com': true, // Malwarebytes CDN\n    'naver.com': true, 'www.naver.com': true,\n    'netflix.com': true, 'www.netflix.com': true,\n    'nsslabs.com': true, 'www.nsslabs.com': true,\n    'office.com': true, 'www.office.com': true,\n    'pinterest.com': true, 'www.pinterest.com': true,\n    'qq.com': true, 'www.qq.com': true,\n    'reddit.com': true, 'www.reddit.com': true,\n    'tiktok.com': true, 'www.tiktok.com': true,\n    'twitch.tv': true, 'www.twitch.tv': true,\n    'twitter.com': true, 'www.twitter.com': true,\n    'virustotal.com': true, 'www.virustotal.com': true,\n    'vk.com': true, 'www.vk.com': true,\n    'weather.com': true, 'www.weather.com': true,\n    'whatsapp.com': true, 'www.whatsapp.com': true,\n    'wikipedia.org': true, 'www.wikipedia.org': true,\n    'windows.net': true, 'www.windows.net': true,\n    'windowsupdate.com': true, 'www.windowsupdate.com': true,\n    'yahoo.co.jp': true, 'www.yahoo.co.jp': true,\n    'yahoo.com': true, 'www.yahoo.com': true,\n    'yandex.ru': true, 'www.yandex.ru': true,\n    'youtube.com': true, 'www.youtube.com': true,\n    'zoom.us': true, 'www.zoom.us': true,\n};\n\nexport const ALL_TIME_STATS_TEMPLATE = {\n    ads: 0,\n    silentAds: 0,\n    malwares: 0,\n    silentMalwares: 0,\n    scams: 0,\n    silentScams: 0,\n    content: 0,\n    silentContent: 0,\n}\n","import { chrome } from \"@/utils/polyfill\";\n\nexport const uiLanguage = chrome.i18n.getUILanguage().split(\"-\")[0];\n\n/**\n * Finds an element by ID and replaces its text with the appropriate internationalized string\n * @param {Array<{id: String, msg: String, sub: String}>} nodes - `id` corresponds to the dom element's ID | `msg` corresponds to the appropriate translation name in messages.json | `sub` is any substitution text\n * @param {HTMLElement} dom - (optional) the document to find the element in [defaults to `document`]\n * @returns {void}\n */\nexport const translateText = (\n  nodes: Array<{ id: string; msg: string; sub?: string }>,\n  dom: Document = document\n): void =>\n  nodes.forEach(({ id, msg, sub = null }) => {\n    const element = dom.getElementById(id);\n    element &&\n      (element.textContent = chrome.i18n.getMessage(msg, sub || undefined));\n  });\n\n\n/**\n * @param {String} key The key to translate\n * @param {string | undefined} sub The substitution text\n * @returns {String} The translated string\n */\nexport function translateSimpleText(\n  key: string,\n  sub: string | undefined = undefined\n): string {\n  return chrome.i18n.getMessage(key, sub);\n}","import {getPublicSuffix, getSubdomain, getDomainWithoutSuffix, getDomain} from 'tldts';\n\nimport {getUUID, simpleStorageGet, simpleStorageSet} from './storage.ts';\nimport {isIp, mbDbRegex, dbCleanerRegex} from './patterns';\nimport {chrome, performance} from './polyfill.ts';\nimport { UAParser } from 'ua-parser-js';\n\n\nimport * as utils from './utils';\nimport { TARGET_BROWSER } from '../app/scripts/browser-const';\n\nexport const cleanHostname = (dirtyHost = \"\") =>\n    dirtyHost\n        .toLowerCase()\n        .replace(/[<>]/g, \"\") //get rid of brackets\n        .replace(/http[s]?:\\/\\//g, \"\") //get rid of protocol\n        .replace(\"www.\", \"\") //get rid of redundant subdomain\n        .replace(/\\/$/, \"\")\n        .trim();\n\nexport const uuidCreate = function() {\n    // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n        let r = Math.random() * 16 | 0;\n        let v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n};\n\nexport const uuidSet = (uuid) => simpleStorageSet({uuid});\n\nexport const uuidGet = async function() {\n    let uuid = await getUUID();\n    if (!uuid) {\n        uuid = utils.uuidCreate();\n        await utils.uuidSet(uuid);\n    }\n    return uuid;\n};\n\n/**\n * Finds if there is a substring match in mismatched strings\n * @param {string} needle - String in which to check various substrings of the \"haystack\"\n * @param {string} haystack - String you want to search in\n * @param {number} minSubstringLength - defaults to 1\n * @return {boolean}\n * @example\n * // returns  true\n * hasSubstringMatch('dbfreteonline', 'dbfreteComp.exe', 5)\n *\n * @see https://stackoverflow.com/a/13007065/4875295\n */\nexport const hasSubstringMatch = (needle, haystack, minSubstringLength = 1) => {\n    // Search possible substrings from largest to smallest:\n    for (let i = needle.length; i >= minSubstringLength; i--) {\n        for (let j = 0; j <= needle.length - i; j++) {\n            const substring = needle.substr(j, i);\n            if (haystack.includes(substring)) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n\n/**\n * @param {string} url - A valid URL\n * @return {string} - The hostname of the URL\n */\nexport const urlHost = function(url) {\n    if (url == null || url === \"\") {\n        return \"\";\n    }\n\n    if (isBrowserPage(url)) {\n        return \"\";\n    }\n\n    if (url.toLowerCase().startsWith(\"data:\")) {\n        return \"\";\n    }\n\n    if (url.toLowerCase().startsWith(\"blob:\")) {\n        url = url.substring(5);\n    }\n\n    try {\n        if (\n            !url.toLowerCase().startsWith('http://') &&\n            !url.toLowerCase().startsWith('https://')\n        ) {\n            url = `http://${url}`;\n        }\n        return new URL(url).hostname;\n    } catch (err) {\n        console.debug('UH: invalid URL ', url, ' ', err);\n        return url;\n    }\n};\n\nexport const urlTLD = function(url) {\n    try {\n        if (!url) {\n            console.debug('UT: Invalid url passed: ', url);\n            return '';\n        }\n        const tld = getPublicSuffix(url, {allowPrivateDomains: true});\n\n        if (!tld) {\n            console.debug(\"UT: TLD parsing error for \", url);\n            return '';\n        }\n\n        return tld ? tld.toLowerCase() : '';\n    } catch (err) {\n        console.error(\"UT Error: \", err);\n        return '';\n    }\n};\n\n/**\n * Finds all domains in a host, excluding the TLD\n * @param {string} host - The URL's hostname\n * @return {Array<string>} An array of the all domains in a host lowercased, excluding the TLD\n * @example\n * // returns  ['instalki', 'download']\n * domainList('download.instalki.co.uk')\n */\nexport const domainList = (host) => {\n    if (!host) {\n        return [];\n    }\n\n    const sld = getDomainWithoutSuffix(host);\n    const subdomain = getSubdomain(host);\n\n    if (!sld && !subdomain) {\n        console.debug(\"DL: Domain parsing error for: \", host);\n        return [];\n    }\n\n    return [\n        ...(sld ? [sld] : []),\n        ...(subdomain ? subdomain.split(\".\") : []),\n    ].map((domain) => domain.toLowerCase());\n};\n\n/**\n * Find a URL host's Subdomain\n * @param {string} host - The URL's hostname\n * @return {string} The host's subdomain lowercased | empty string if no subdomain\n * @example\n * // returns  'download'\n * subdomain('download.instalki.co.uk')\n * // returns  ''\n * subdomain('instalki.co.uk')\n * // returns  'whytho.cool'\n * subdomain('whytho.cool.instalki.co.uk')\n */\nexport const subdomain = (host) => {\n    if (!host) {\n        return '';\n    }\n\n    const sub = getSubdomain(host, {allowPrivateDomains: true});\n\n    if (!sub) {\n        console.debug(\"SD: Subdomain parsing error for: \", host);\n        return '';\n    }\n\n    return sub.toLowerCase();\n};\n\n/**\n * Find a URL's domain\n * @param {string} url - The URL\n * @return {string} The host's domain lowercased | empty string if no domain could be gotten\n * @example\n * // returns  'instalki.co.uk'\n * domain('https://download.instalki.co.uk')\n * // returns  'instalki.co.uk'\n * domain('instalki.co.uk')\n * // returns  'instalki.co.uk'\n * domain('https://whytho.cool.instalki.co.uk')\n * // returns  'rfrs38m9.s3.us-east-2.amazonaws.com'\n * domain('https://rfrs38m9.s3.us-east-2.amazonaws.com/')\n */\nexport const domain = (url) => {\n    if (!url) {\n        return '';\n    }\n\n    if (isBrowserPage(url)) {\n        return '';\n    }\n\n    // Perhaps we can deprecate private domains (e.g. s3.amazonaws.com) later, but I left it in for now since that's how the previous package worked\n    const domain = getDomain(url, {allowPrivateDomains: true});\n\n    if (!domain) {\n        console.debug(\"D: Domain parsing error for: \", domain);\n        return '';\n    }\n\n    return domain;\n};\n\n/**\n * Find a URL host's SLD (second level domain)\n * @param {string} host - The URL's hostname\n * @return {string} The host's SLD lowercased\n * @example\n * // returns  'instalki'\n * sld('download.instalki.co.uk')\n */\nexport const sld = (host) => {\n    if (!host) {\n        return '';\n    }\n\n    const sldd = getDomainWithoutSuffix(host, {allowPrivateDomains: true});\n\n    if (!sldd) {\n        console.debug(\"SLD: Domain parsing error for: \", host);\n        return '';\n    }\n\n    return sldd.toLowerCase();\n};\n\nexport const urlExt = (url) => {\n    if (!url) {\n        console.debug('UE: Params Error: No URL passed');\n        return null;\n    }\n\n    // find and remove \"//\" from the beginning of the URL\n    if (url.includes('//')) {\n        url = url.substring(url.indexOf('//') + 2);\n    }\n\n    // Find the last slash index, ensuring it's not the first character\n    const lastSlashIndex = url.lastIndexOf('/');\n\n    // Check if there's a slash and dot separator within the valid filename area\n    if (lastSlashIndex !== -1 && url.indexOf('.', lastSlashIndex + 1) !== -1) {\n    // Split the string after the last slash and get the last part\n        let location = lastSlashIndex + 1;\n        let fileName = '';\n        while (location < url.length && url[location] !== '?') {\n            fileName += url[location];\n            location++;\n        }\n        let parts = fileName.split('.');\n        // remove empty strings (could happen if a url ends with a dot)\n        parts = parts.filter((part) => part !== '');\n        if (parts.length > 1) {\n            return parts[parts.length - 1].toLowerCase();\n        }\n    }\n\n    // No valid extension found\n    return null;\n};\n\nlet urlDomainsCache = {};\n\nexport const urlDomains = (url) => {\n    let host = urlHost(url);\n    if (!host) {\n        return [];\n    }\n    if (urlDomainsCache[url]) {\n        return urlDomainsCache[url];\n    }\n\n    let parts = host.split('.');\n    let domains = [];\n    let count = 0;\n    do {\n        domains.push(parts.slice(count).join(\".\"));\n        count++;\n    } while (count < parts.length - 1);\n\n    if (domains.length > 1) {\n        let publicSuffix = getPublicSuffix(url, {allowPrivateDomains: true}) || '';\n        // domain could be a local name such as http://wsb:8501\n        // in this case, the publicSuffix is the same as the domain\n        domains = domains.filter((domain) => domain !== publicSuffix);\n    }\n    urlDomainsCache[url] = domains;\n    return domains;\n};\n\n/* Icons */\n\nexport const iconBadge = function(tabId, text, color) {\n    chrome.tabs.get(tabId, (_tab) => {\n        if (!chrome.runtime.lastError) {\n            (chrome.action || chrome.browserAction).setBadgeText({tabId: tabId, text: text});\n            (chrome.action || chrome.browserAction).setBadgeBackgroundColor({tabId: tabId, color: color});\n        }\n    });\n};\n\n\n/* Binary */\n\nexport const binaryToString = function(arrayBuffer) {\n    let binaryArray;\n    if (arrayBuffer.constructor.name == 'Uint8Array') {\n        binaryArray = arrayBuffer;\n    } else {\n        binaryArray = new Uint8Array(arrayBuffer);\n    }\n    return binaryArray.reduce((str, byte) => str + String.fromCharCode(byte), '');\n};\n\nexport const binaryFromString = function(str) {\n    return Uint8Array.from(str, (char) => char.charCodeAt(0)).buffer;\n};\n\n//\n// binary ArrayBuffer to/from base64-encoded ASCII string\n//\n\nexport const binaryToBase64 = function(arrayBuffer) {\n    return btoa(utils.binaryToString(arrayBuffer));\n};\n\nexport const binaryFromBase64 = function(str) {\n    return utils.binaryFromString(atob(str));\n};\n\nexport const objToBinary = (obj) => {\n    return binaryFromString(JSON.stringify(obj));\n};\n\n/**\n* Check if the given bytes array is a Zstd file\n* @param {Uint8Array} binaryArray - The array of bytes to check\n* @return {boolean} - True if the array is a Zstd file, false otherwise\n*/\nexport const isZstd = (binaryArray) => {\n    if (binaryArray.length < 4) {\n        return false;\n    }\n    //Find the Magic Number 0xFD2FB528 (little-endian)\n    //https://datatracker.ietf.org/doc/html/rfc8878#section-3.1.1\n    return binaryArray[0] == 40 && binaryArray[1] == 181 &&\n        binaryArray[2] == 47 && binaryArray[3] == 253;\n};\n\nexport let browserMem = {};\nObject.defineProperty(browserMem, 'browser', {writable: true});\n\n/**\n * Get the user's browser name\n * @return {string} \"Firefox\", \"Opera\", \"Edge\", \"Chrome\", \"Safari\" or \"Browser\"\n */\nexport const browserName = function() {\n    if (browserMem.browser) {\n        return browserMem.browser;\n    }\n    if (navigator.userAgent.includes(\"Firefox/\")) {\n        return (browserMem.browser = \"Firefox\");\n    }\n    if (\n        navigator.userAgent.includes(\"Opera/\") ||\n        navigator.userAgent.includes(\"OPR/\")\n    ) {\n        return (browserMem.browser = \"Opera\");\n    }\n    if (\n        navigator.userAgent.includes(\"Edge/\") ||\n        navigator.userAgent.includes(\"Edg/\")\n    ) {\n        return (browserMem.browser = \"Edge\");\n    }\n    if (navigator.userAgent.includes(\"Chrome/\")) {\n        return (browserMem.browser = \"Chrome\");\n    }\n\n    if (navigator.userAgent.includes(\"Safari/\")) {\n        return (browserMem.browser = \"Safari\");\n    }\n\n    return \"Browser\";\n};\n\nexport let osMem = {};\nObject.defineProperty(osMem, 'os', {writable: true});\n\nexport const osName = () => {\n    return new Promise((res) => {\n        osMem.os ? res(osMem.os) : chrome.runtime.getPlatformInfo(({os}) => {\n            osMem.os = os;\n            res(osMem.os);\n        });\n    });\n};\n\n/* Redirect */\n\nexport const createBlockUrl = function(\n    optionalReferrer,\n    url,\n    type,\n    subtype,\n    tabId,\n    optionalFilename,\n    optionalPrevUrl,\n    rule\n) {\n    return (\n        chrome.runtime.getURL(`app/eventpages/${isMV3() ? 'block-mv3.html' : 'block.html'}`) +\n        \"?\" +\n        redirectParameters({\n            referrer: optionalReferrer,\n            url,\n            host: urlHost(url),\n            type,\n            subtype,\n            tabId,\n            filename: optionalFilename,\n            prevUrl: optionalPrevUrl || null,\n            rule\n        })\n    );\n};\n\n/**\n * Converts an object of parameters into a URL-encoded string.\n * @param {Object} parameters - The parameters to be converted.\n * @returns {string} - The URL-encoded string.\n */\nexport const redirectParameters = function(parameters) {\n    let searchParams = new URLSearchParams;\n    for (let key in parameters) {\n        if (Object.hasOwn(parameters, key)) {\n            searchParams.set(key, parameters[key]);\n        }\n    }\n    return searchParams.toString();\n};\n\n/* Fetch */\n\nexport const fetchText = async function(url, options = {}) {\n    let response = await fetch(url, utils.fetchOptions(options));\n    let contents = await response.text();\n    return contents;\n};\n\nexport const fetchJSON = async function(url, options = {}) {\n    let response = await fetch(url, utils.fetchOptions(options));\n    let contents = await response.json();\n    return contents;\n};\n\nexport const fetchBinary = async function(url, options = {}) {\n    let response = await fetch(url, utils.fetchOptions(options));\n    return await response.arrayBuffer();\n};\n\nexport const fetchOptions = function(options) {\n    options.method = options.method || \"GET\";\n    options.headers = options.headers || {};\n    options.headers[\"pragma\"] = \"no-cache\";\n    options.headers[\"cache-control\"] = \"no-cache, no-store\";\n\n    return options;\n};\n\nexport const injectJavascript = function(scriptContents) {\n    let script = document.createElement(\"script\");\n    script.textContent = scriptContents;\n    let parent = (document.head || document.documentElement);\n    parent.insertBefore(script, parent.firstChild);\n    script.remove();\n};\n\nexport const meas = (thisStep, prevStep) => {\n    performance.mark(thisStep);\n    if (prevStep) {\n        performance.measure(\n            thisStep + '_time',\n            prevStep,\n            thisStep\n        );\n    }\n};\n\n// Test cases https://regexr.com/5n86j\nexport const isValidIP = (ip = '') => isIp.test(ip);\n\n// Test if the given string is a valid domain name or an IP address\nexport function isValidUrl(domain) {\n    try {\n        if (isValidIP(domain)) {\n            return true;\n        }\n        const removeRedundant = domain.replace(/^(https?:\\/\\/)?(www\\.)?/i, '');\n        let str = cleanHostname(removeRedundant);\n        if (!str.startsWith('http') && (!str.includes('.') || str.endsWith('.'))) {\n            return false;\n        }\n        // A domain name consists of minimum two and maximum 63 characters.\n        if (str.length < 3 || str.length > 253) {\n            return false;\n        }\n        let url = new URL(str.startsWith('http') ? str : `http://${str}`);\n        return !!url;\n    } catch (error) {\n        return false;\n    }\n}\n\n// This works on chrome until 76. Firefox blocked the check in older versions.\n// On new versions we just send the Telemetry (unless opted out)\nexport const isIncognito = () => chrome.extension.inIncognitoContext;\n\nexport const cleanDbName = (dbName) =>\n    dbName.replace(mbDbRegex, \"\").replace(dbCleanerRegex, \"_\").replace(\"_2\", \"\");\n\n/**\n * Returns evenly spaced [targetLen] elements from the input array\n * @param {array} array - The array to condense\n * @param {number} targetLen - The length of the condensed array\n * @return {array} The condensed array\n * @example\n * // returns [0, 2, 4, 6, 8]\n * condenseArray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 5)\n */\nexport const condenseArray = (array, targetLen) => {\n    if (array.length === 0) {\n        return [];\n    }\n\n    if (array.length < targetLen) {\n        return array;\n    }\n\n    let result = [];\n    for (let i = 0; i < targetLen; i++) {\n        const pct = i / targetLen;\n        const idx = Math.round(pct * array.length);\n        const item = array[idx];\n        result.push(item);\n    }\n    return result;\n};\n\n/**\n * Truncates string if it's longer than the given maximum string length. The last characters of the truncated string are replaced with  \"...\"\n * @param {string} str - The string to truncate.\n * @param {number} maxLength - The maximum string length. Default to 2048\n * @return {string} The truncated string\n * @example\n * // returns 'hi-diddly-ho there,...'\n * truncate('hi-diddly-ho there, neighborino', 24)\n */\nexport const truncate = (str, maxLength = 2048) => {\n    return (str.length > maxLength) ? str.substr(0, maxLength - 1) + '...' : str;\n};\n\n/**\n * Determine if the given URL is a Blob URL. Blob urls starts with 'blob:' or 'data:'\n * @param {string} url - The URL to check\n * @return {boolean} True if the URL is a blob\n * @example\n * // returns 'true'\n * isBlobUrl('blob:https://crap.crap')\n */\nexport const isBlobUrl = (url = \"\") => url.startsWith(\"blob:\") || url.startsWith(\"data:\");\n\nexport const abbreviateLargeNumber = (number) => {\n    const suffixes = ['', 'k', 'm', 'b', 't'];\n\n    if (number < 1000) {\n        return number.toString();\n    }\n\n    const sNum = Math.floor(('' + number).length / 3);\n\n    let sVal = parseFloat((\n        sNum != 0 ? (number / Math.pow(1000, sNum)) : number).toPrecision(2));\n\n    sVal = sVal.toString();\n    let idx = (sVal.indexOf(\".\"));\n    if (idx !== -1) {\n        sVal = sVal.slice(0, idx);\n    }\n    sVal = Number(sVal);\n\n    let sign = '';\n    // for 10k and above, we can't add the plus sign because there's not enough space\n    if (sVal < 10) {\n        const base = sVal * Math.pow(1000, sNum);\n        if (number > base) {\n            sign = '+';\n        }\n    }\n\n    return sVal + suffixes[sNum] + sign;\n};\n\nexport const isIndexedDbAvailable = () => {\n    return !!(indexedDB);\n};\n\nconst AD_TELEM_DATE = 'adTelemDate';\nexport const hasOneDayPassed = () => {\n    return new Promise((resolve) => {\n        const date = new Date().toLocaleDateString();\n\n        simpleStorageGet(AD_TELEM_DATE).then(lastSent => {\n            if (lastSent === date) {\n                resolve(false);\n            } else {\n                simpleStorageSet({[AD_TELEM_DATE]: date}).then(() => resolve(true));\n            }\n        });\n    });\n};\n\n\n// memoize this function\nexport let isMV3Mem = {};\nObject.defineProperty(isMV3Mem, 'isMV3', {writable: true});\nexport const isMV3 = () => {\n    isMV3Mem.isMV3 = isMV3Mem.isMV3 || chrome.runtime.getManifest().manifest_version === 3;\n    return isMV3Mem.isMV3;\n};\n\nexport let bgVersionMem = {};\nObject.defineProperty(bgVersionMem, 'bgVersion', { writable: true });\nexport const bgVersion = bgVersionMem.bgVersion || chrome.runtime.getManifest()?.version;\n\n\n/**\n * @param {string} fileName - js file to be injected into page\n * @param {object} searchParams - object to be passed to the injected script as query parameters\n * @note Remember to add your script to web_accessible_resources in the manifest\n */\nexport const injectJsFile = (fileName, searchParams) => {\n    let parent = document.head || document.documentElement;\n    let script = document.createElement(\"script\");\n    if (searchParams) {\n        script.src = chrome.runtime.getURL(`${fileName}?`) + new URLSearchParams(searchParams);\n    } else {\n        script.src = chrome.runtime.getURL(fileName);\n    }\n\n    script.onload = function() {\n        this.remove();\n    };\n    parent.appendChild(script);\n};\n\nexport const downloadLogsToFile = (logDataStr) => {\n    const logData = logDataStr;\n    const url = URL.createObjectURL(new Blob([logData], {type: 'text/plain'}));\n    let dlDownloadName;\n    const time = new Date();\n    dlDownloadName = `BG-Logs_v${chrome.runtime.getManifest().version}_` +\n        `${time.toISOString().slice(0, 10)}_${time.getHours()}${time.getMinutes()}${time.getSeconds()}.txt`;\n\n    let options = {url, filename: dlDownloadName, conflictAction: 'uniquify'};\n    // now add 'saveAs: false' if the browser is firefox due to an ff bug\n    if (TARGET_BROWSER === 'Firefox') {\n        options.saveAs = false;\n    }\n\n    chrome.downloads.download(options).then(() => {\n        console.log('Successfully Downloaded logs');\n    }).catch((err) => {\n        console.error('Error downloading logs', err);\n    });\n    // use chrome.downloads.onChange event to remove the URL once the download is complete\n    chrome.downloads.onChanged.addListener((download) => {\n        if (download.state && download.state.current === 'complete') {\n            URL.revokeObjectURL(url);\n        }\n    });\n};\n\n/**\n * Checks if a given URL belongs to an internal browser page.\n * @param {string} url - The URL to check.\n * @returns {boolean} - Returns true if the URL belongs to an internal browser page, otherwise returns false.\n */\nexport const isBrowserPage = (url) => {\n    if (!url || url === '') {\n        return true;\n    }\n    return url.startsWith('chrome-extension://') ||\n    url.startsWith('moz-extension://') ||\n    url.startsWith('edge-extension://') ||\n    url.startsWith('edge://') ||\n    url.startsWith('file://') ||\n    url.startsWith('about:') ||\n    url.startsWith('chrome-devtools://') ||\n    url.startsWith('devtools://') ||\n    url.startsWith('chrome://');\n}\n\n/**\n * Checks if the given URL belongs to a private network.\n *\n * @param {string} url - The URL to check.\n * @returns {boolean} Returns true if the URL belongs to a private network, false otherwise.\n */\nexport const isPrivateNetwork = (url) => {\n    if (!url || url === '') {\n        return true;\n    }\n\n    if (isBrowserPage(url)) {\n        return true;\n    }\n\n    const urlObj = new URL(url);\n    return urlObj.hostname === 'localhost' ||\n        urlObj.hostname.startsWith('127.') ||\n        urlObj.hostname.startsWith('10.') ||\n        urlObj.hostname.startsWith('192.168.') ||\n        urlObj.hostname.startsWith('172.');\n};\n\nexport const getRandomNumberInRange = (min, max)=>{\n    const randomDecimal = Math.random();\n    const randomNumber = min + randomDecimal * (max - min);\n    return randomNumber;\n};\n\nexport const fullJitterBackoffLogic = (attempt, cap, baseTime) =>{\n    let delayTime = getRandomNumberInRange(0, Math.min(cap, baseTime * (2 ** attempt)));\n    delayTime = Math.floor(delayTime);\n    return delayTime;\n};\n\nexport function parseParams(searchParams) {\n    const handler = {\n        get(target, prop) {\n            if (prop.startsWith('$')) {\n                return target[prop];\n            }\n            return target[`$${prop}`];\n        }\n    };\n\n    let params = {};\n    let pairs = new URLSearchParams( searchParams ).entries();\n\n    for (let pair of pairs) {\n        const name = '$' + pair[0];\n        if (pair[1] === 'null') {\n            params[name] = null;\n        } else if (pair[1] === 'undefined') {\n            params[name] = undefined;\n        } else {\n            params[name] = pair[1];\n        }\n    }\n    const proxy = new Proxy(params, handler);\n    return proxy;\n}\n\n/**\n * Calculates a fast hash value for the given string.\n * @param {string} str - The input string to calculate the hash for.\n * @returns {number} The calculated hash value as a 32-bit integer.\n */\nexport function fastHash(str) {\n    let hash1 = 5381;\n    let hash2 = 0;\n    if (str.length === 0) {\n        return hash1;\n    }\n    for ( let c of str ) {\n        hash1 = ( 33 * hash1 + c.charCodeAt(0) ) >>> 0;\n        hash2 = ( 65599 * hash2 + c.charCodeAt(0) ) >>> 0;\n    }\n\n    let hash = (hash1 ^ hash2) >>> 0;\n    return hash;\n}\n\nexport function getIncrementalPathSegments(url) {\n    if (!url) {\n        return [];\n    }\n    let urlObj;\n    try {\n        urlObj = new URL(url);\n    } catch (error) {\n        return [];\n    }\n\n    let parts = urlObj.pathname.split('/');\n    let paths = [];\n    let count = 0;\n    do {\n        paths.push(parts.slice(count).join(\"/\"));\n        count++;\n    } while (count < parts.length);\n    return paths;\n}\n\n\nexport const injectCSS = (cssFileName, cssContents) => {\n    let parent = document.head || document.documentElement;\n    let styleElement = document.createElement(\"style\");\n\n    if (cssFileName) {\n        // Link to external CSS file\n        let linkElement = document.createElement(\"link\");\n        linkElement.rel = \"stylesheet\";\n        linkElement.href = chrome.runtime.getURL(cssFileName);\n        parent.appendChild(linkElement);\n    } else if (cssContents) {\n        // Inject inline CSS\n        styleElement.textContent = cssContents;\n        parent.appendChild(styleElement);\n    }\n};\n\n\n/**\n * Clean the object properties by a template object\n * @param {object} ObjToClean - The object to clean\n * @param {object} Template - The template object\n * @param {boolean} setDefault - If true, set the default value from the template if the value is falsy\n * @returns {object} - The cleaned object\n */\nexport const cleanObjectPropsByTemplate = (ObjToClean, Template, setDefault = false) => {\n    // Get the allowed properties from the template\n    const allowedProps = Object.keys(Template);\n\n    // Create a new object with only the allowed properties\n    const cleanedObject = {};\n\n    // Iterate over the allowed properties and add them to the cleaned object\n    allowedProps.forEach((key) => {\n        if (Object.hasOwn(ObjToClean, key)) {\n            cleanedObject[key] = ObjToClean[key];\n        } else if (setDefault) {\n            cleanedObject[key] = Template[key];\n        }\n    });\n\n    return cleanedObject;\n};\n\n/**\n * Get absolute xPath position from dom element\n * xPath position will does not contain any id, class or attribute, etc selector\n * Because, Some page use random id and class. This function should ignore that kind problem, so we're not using any selector\n *\n * @param {Element} element element to get position\n * @returns {String} xPath string\n */\nexport function getXPath(element) {\n    // Selector\n    let selector = '';\n    // Loop handler\n    let foundRoot;\n    // Element handler\n    let currentElement = element;\n\n    // Do action until we reach html element\n    do {\n        // Get element tag name\n        const tagName = currentElement.tagName.toLowerCase();\n        // Get parent element\n        const parentElement = currentElement.parentElement;\n\n        // Count children\n        if (parentElement && parentElement.childElementCount > 1) {\n            // Get children of parent element\n            const parentsChildren = [...parentElement.children];\n            // Count current tag\n            let tag = [];\n            parentsChildren.forEach(child => {\n                if (child.tagName.toLowerCase() === tagName) {\n                    tag.push(child); // Append to tag\n                }\n            })\n\n            // Is only of type\n            if (tag.length === 1) {\n                // Append tag to selector\n                selector = `/${tagName}${selector}`;\n            } else {\n                // Get position of current element in tag\n                const position = tag.indexOf(currentElement) + 1;\n                // Append tag to selector\n                selector = `/${tagName}[${position}]${selector}`;\n            }\n\n        } else {\n            //* Current element has no siblings\n            // Append tag to selector\n            selector = `/${tagName}${selector}`;\n        }\n\n        // Set parent element to current element\n        currentElement = parentElement;\n        if (currentElement == null)\n        {\n            break;\n        }\n        // Is root\n        foundRoot = parentElement.tagName && parentElement.tagName.toLowerCase() === 'html';\n        // Finish selector if found root element\n        if(foundRoot) {\n            selector = `/html${selector}`;\n        }\n    }\n    while (foundRoot === false);\n\n    // Return selector\n    return selector;\n}\n\nexport const getEmptyEasylistItemsElement = () => {\n    const emptyResult = {\n        'ids': [],\n        'classes': [],\n        'tags': [],\n        'selectors': [],\n        'exception_rules': [],\n        'extended_hide': [],\n        'specific_hide': [],\n        'clickables': [],\n    };\n    return {'easylist': emptyResult, 'easylistprivacy': emptyResult};\n}\nexport const getBrowserInformation = async () => {\n\n    if (navigator.userAgent) {\n        return parseUserAgent(navigator.userAgent);\n    }\n\n    if (navigator.userAgentData && navigator.userAgentData.getHighEntropyValues) {\n        try {\n            const uaData = await navigator.userAgentData.getHighEntropyValues(\n                [\n                    \"architecture\",\n                    \"model\",\n                    \"platformVersion\",\n                    \"fullVersionList\"\n                ]\n            );\n            if (uaData.fullVersionList && uaData.fullVersionList.length > 0) {\n            // Find the browser with the highest priority (usually the first one)\n                const browser = uaData.fullVersionList[0];\n                return {\n                    name: browser.brand,\n                    version: browser.version,\n                    os: {name: uaData.platform, version: uaData.platformVersion},\n                    cpu: {architecture: uaData.architecture, model: uaData.model},\n                    fullInfo: uaData\n                };\n            }\n        } catch (error) {\n            console.error(\"Error getting high entropy values:\", error);\n            // Fallback to userAgent\n        }\n    }\n\n    if (browser != null && browser.runtime && browser.runtime.getBrowserInfo) {\n        const browserInfo = await browser.runtime.getBrowserInfo();\n        const osInfo = await browser.runtime.getPlatformInfo();\n        return {\n            name: \"Firefox\", //Or other browser name.\n            version: browserInfo.version,\n            os: {name: osInfo.os || \"Unknown\", version: osInfo.os_version || \"Unknown\"},\n            cpu: {architecture: osInfo.arch || 'Unknown'},\n            device: {type: osInfo.vendor || 'Unknown'}\n        };\n    }\n\n    return null; // Unable to determine browser version\n}\n\nexport function parseUserAgent(userAgent) {\n    // use the useragent parser library\n    const parsed = UAParser(userAgent)\n\n    let version = parsed.browser.version || '0.0.0';\n    let name = parsed.browser.name || 'Unknown';\n    let cpu = {architecture: parsed.cpu.architecture || 'Unknown'};\n    let device = {model: parsed.device.model || 'Unknown'};\n    let os = { name: parsed.os.name || 'Unknown', version: parsed.os.version || 'Unknown'};\n\n    while (version.split('.').length < 3) {\n        version += '.0';\n    }\n\n    return {\n        name,\n        version,\n        cpu,\n        device,\n        os,   \n    };\n}\n\nexport const throttleFunc = (func, limit) => {\n    let inThrottle;\n    return function() {\n        const args = arguments;\n        const context = this;\n        if (!inThrottle) {\n            func.apply(context, args);\n            inThrottle = true;\n            setTimeout(() => inThrottle = false, limit);\n        }\n    }\n};\n\n/**\n * Check if the given URL is a block page.\n * @param {string} UrlString - The URL to check\n * @returns {boolean} - Returns true if the URL is a block page, otherwise false.\n */ \nexport function isBlockPage(UrlString) {\n    if (!UrlString) {\n        return false;\n    }\n    const url = new URL(UrlString);\n    return url.pathname.endsWith('block-mv3.html');\n}\n\n/**\n * Get the blocked host URL from the given URL string.\n * @param {string} UrlString - The URL string to extract the blocked host from\n * @returns {string|null} - Returns the blocked host URL if found, otherwise null.\n */\nexport function getBlockedHostURL(UrlString) {\n    if (!UrlString) {\n        return null;\n    }\n    const url = new URL(UrlString);\n    return url.searchParams.get('host');\n}\n\n\n/**\n * Get the tab by its ID.\n * @param {number} tabId - The ID of the tab to retrieve\n * @returns {Promise<chrome.tabs.Tab|null>} - Returns a promise that resolves to the tab object if found, otherwise null.\n * @throws {Error} - Throws an error if the tab cannot be retrieved.\n*/\nexport async function getTabById(tabId) {\n    if (tabId === -1 || !tabId) {\n        return null;\n    }\n\n    return new Promise((resolve, reject) => {\n        chrome.tabs.get(tabId, (tab) => {\n            if (chrome.runtime.lastError) {\n                reject(chrome.runtime.lastError);\n            } else {\n                resolve(tab);\n            }\n        });\n    });\n}\n\n/**\n * Get the currently active tab in the current window.\n * @returns {Promise<chrome.tabs.Tab|null>} - A promise that resolves to the current tab or null if not found.\n */\nexport async function getCurrentTab() {\n    let queryOptions = { active: true, currentWindow: true };\n    let [tab] = await chrome.tabs.query(queryOptions);\n    return tab;\n}\n","import {MSG_DOWNLOAD_LOGS} from './app-consts';\nimport {chrome} from '../../utils/polyfill.ts';\nimport {translateText} from '../../utils/locales.ts';\nimport {downloadLogsToFile} from '../../utils/utils';\nwindow.addEventListener('DOMContentLoaded', ()=>{\n    translateText([\n        {id: 'download-status', msg: 'downloadingStatus'},\n    ]);\n    document.getElementById(\"progress-percentage\").textContent = '65%';\n    document.querySelector('.debug-page-header').classList.remove('hidden');\n});\nwindow.addEventListener(\"load\", () => {\n    const downloadImage = document.querySelector(\".download-debug-logs-content .img-container\");\n    const downloadStatusTxt = document.getElementById(\"download-status\");\n    const downloadProgressBar = document.querySelector(\".download-debug-logs-content .progress-bar-container\");\n    const downloadProgressPercentage = document.getElementById(\"progress-percentage\");\n    const downloadErrorFooter = document.querySelector(\".download-debug-logs-content .debug-error-footer\");\n\n    chrome.runtime.sendMessage(\n        {type: MSG_DOWNLOAD_LOGS, fullLog: true},\n        (resp) => {\n            if (!resp || resp.error) {\n                translateText([\n                    {id: 'debug-error-message', msg: 'debugErrorMessage'},\n                    {id: 'support-txt', msg: 'supportTxt'}\n                ]);\n                downloadStatusTxt.textContent = chrome.i18n.getMessage(\"downloadErrorStatus\");\n                downloadImage.classList.remove('downloading');\n                downloadImage.classList.add('error');\n                downloadProgressBar.classList.remove('downloading');\n                downloadProgressBar.classList.remove('pulse-animation');\n                downloadProgressBar.classList.add('error');\n                downloadProgressPercentage.textContent = chrome.i18n.getMessage(\"downloadError\");\n                downloadErrorFooter.classList.remove('hidden');\n            } else {\n                downloadStatusTxt.textContent = chrome.i18n.getMessage(\"downloadCompleteStatus\");\n                downloadImage.classList.remove('downloading');\n                downloadImage.classList.add('complete');\n                downloadProgressBar.classList.remove('downloading');\n                downloadProgressBar.classList.remove('pulse-animation');\n                downloadProgressBar.classList.add('complete');\n                downloadProgressPercentage.textContent = '100%';\n                downloadLogsToFile(resp.data);\n            }\n        }\n    );\n});\n"],"names":["TRACE_FLAG_SAMPLED","spanToTraceContext","span","spanId","span_id","traceId","trace_id","spanContext","data","op","parent_span_id","status","tags","origin","spanToJSON","getSpanJSON","spanIsSpanClass","toJSON","spanIsSampled","traceFlags","Boolean","DEBUG_BUILD","__SENTRY_DEBUG__","uuid4","gbl","crypto","msCrypto","getRandomByte","Math","random","randomUUID","replace","getRandomValues","typedArray","Uint8Array","_","c","toString","getFirstException","event","exception","values","undefined","getEventDescription","message","event_id","eventId","firstException","type","value","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","checkOrSetAlreadyCaught","__sentry_captured__","a","err","arrayify","maybeArray","Array","isArray","makeSession","context","startingTime","session","sid","init","timestamp","started","duration","errors","ignoreDuration","Date","toISOString","did","abnormal_mechanism","attrs","release","environment","ip_address","ipAddress","user_agent","userAgent","sessionToJSON","updateSession","user","id","email","username","length","closeSession","isGlobalObj","obj","GLOBAL_OBJ","globalThis","window","self","g","this","getGlobalObject","getGlobalSingleton","name","creator","__SENTRY__","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","Object","keys","forEach","level","originalConsoleMethod","logger","enabled","enable","disable","isEnabled","args","makeLogger","WINDOW","DEFAULT_MAX_STRING_LENGTH","htmlTreeAsString","elem","options","currentElem","MAX_TRAVERSE_HEIGHT","out","height","len","separator","sepLength","nextStr","keyAttrs","maxStringLength","_htmlElementAsString","push","parentNode","reverse","join","_oO","el","className","classes","key","attr","i","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","getLocationHref","document","location","href","oO","getComponentName","globalScope","Scope","constructor","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","clone","scope","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_client","setClient","client","getClient","addScopeListener","addEventProcessor","setUser","segment","_notifyScopeListeners","getUser","getRequestSession","setRequestSession","requestSession","setTags","setTag","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setContext","setSpan","getSpan","getTransaction","transaction","setSession","getSession","update","captureContext","scopeToMerge","scopeData","getScopeData","contexts","propagationContext","scopeContext","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","breadcrumbs","slice","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","attachments","clearAttachments","eventProcessors","sdkProcessingMetadata","transactionName","applyToEvent","hint","additionalEventProcessors","setSDKProcessingMetadata","newData","setPropagationContext","getPropagationContext","captureException","warn","syntheticException","Error","originalException","captureMessage","captureEvent","getGlobalScope","substring","getRootSpan","GLOBAL_CONTEXT","polyBrowser","chrome","browser","idb","indexedDB","error","log","performance","URL","truncate","str","max","safeJoin","input","delimiter","output","String","e","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","applyScopeDataToEvent","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","trace","rootSpan","dynamicSamplingContext","description","applySpanToEvent","concat","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","mergeAndOverwriteScopeData","prop","mergeVal","prototype","hasOwnProperty","call","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","WeakSet","inner","has","add","delete","splice","memoBuilder","memoize","unmemoize","is","stringified","_events","objName","getPrototypeOf","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","numAdded","visitable","visitKey","visitValue","getGlobalEventProcessors","addGlobalEventProcessor","notifyEventProcessors","processors","index","resolve","reject","processor","result","then","final","prepareEvent","isolationScope","normalizeDepth","normalizeMaxBreadth","prepared","integrations","dist","maxValueLength","request","url","applyClientOptions","integrationNames","sdk","applyIntegrationsMetadata","stackParser","debugIdMap","_sentryDebugIds","debugIdStackFramesCache","cachedDebugIdStackFrameCache","debugIdStackParserCache","get","Map","set","filenameDebugIdMap","reduce","acc","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","filename","stacktrace","frames","frame","debug_id","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","getEventProcessors","isolationData","finalScopeData","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","b","spans","normalizeEvent","WeakMap","parseEventHintOrCaptureContext","hintIsScopeOrFunction","captureContextKeys","hintIsScopeContext","SDK_VERSION","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","executor","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","onfulfilled","onrejected","_executeHandlers","val","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","handler","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","defineProperty","writable","configurable","o_O","proto","getOriginalFunction","func","__sentry_original__","urlEncode","encodeURIComponent","convertToPlainObject","stack","getOwnProperties","newObj","target","serializeEventTarget","currentTarget","CustomEvent","detail","extractedProps","property","extractExceptionKeysForMessage","maxLength","sort","includedKeys","serialized","dropUndefinedKeys","inputValue","_dropUndefinedKeys","memoizationMap","isPojo","memoVal","returnValue","item","objectToString","isError","wat","isInstanceOf","isBuiltin","isErrorEvent","isDOMError","isDOMException","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","isSyntheticEvent","isNaN","base","_e","isVueViewModel","__isVue","_isVue","getDynamicSamplingContextFromClient","getOptions","publicKey","public_key","getDsn","user_segment","dsc","emit","getDynamicSamplingContextFromSpan","txn","v7FrozenDsc","_frozenDynamicSamplingContext","sampleRate","maybeSampleRate","metadata","sample_rate","jsonSpan","sampled","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MAJOR","MODEL","NAME","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","BROWSER","CHROME","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SHARP","SONY","XIAOMI","ZEBRA","FACEBOOK","CHROMIUM_OS","MAC_OS","SUFFIX_BROWSER","enumerize","arr","enums","toUpperCase","str1","str2","lowerize","indexOf","trim","rgxMapper","ua","arrays","j","k","p","q","matches","match","regex","props","exec","strMapper","windowsVersionMap","regexes","cpu","device","engine","EDGE","os","UAParser","extensions","getResult","_navigator","navigator","_ua","_uach","userAgentData","_rgxmap","mergedRegexes","extend","_isSelfNav","getBrowser","version","_browser","brave","isBrave","getCPU","_cpu","getDevice","_device","mobile","standalone","maxTouchPoints","getEngine","_engine","getOS","_os","platform","getUA","setUA","CPU","DEVICE","ENGINE","OS","module","exports","$","jQuery","Zepto","parser","withScope","rest","hub","getStackTop","getCurrentScope","getScope","startSession","currentScope","currentSession","endSession","_sendSessionUpdate","captureSession","end","STACKTRACE_FRAME_LIMIT","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","createStackParser","parsers","sortedParsers","skipFirst","lines","line","cleanedLine","localStack","from","function","pop","stripSentryFramesAndReverse","stackParserFromStackParserOptions","defaultFunctionName","getFunctionName","fn","API_VERSION","parseFloat","DEFAULT_BREADCRUMBS","Hub","_version","assignedScope","assignedIsolationScope","_stack","bindClient","_isolationScope","isOlderThan","top","setupIntegrations","pushScope","getStack","popScope","maybePromiseResult","res","getIsolationScope","_lastEventId","lastEventId","beforeBreadcrumb","finalBreadcrumb","configureScope","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","shouldSendDefaultPii","sendDefaultPii","method","sentry","getMainCarrier","apply","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","acs","carrier","getGlobalHub","ONE_SECOND_IN_MS","dateTimestampInSeconds","now","timestampInSeconds","approxStartingTimeOrigin","timeOrigin","createUnixTimestampInSecondsFunc","_browserPerformanceTimeOriginMode","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","DEFAULT_ENVIRONMENT","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","d","definition","o","enumerable","Function","__webpack_public_path__","runtime","getURL","installedIntegrations","getIntegrationsToSetup","defaultIntegrations","userIntegrations","isDefaultInstance","finalIntegrations","integrationsByName","currentInstance","existingInstance","filterDuplicates","debugIndex","findIndex","debugInstance","afterSetupIntegrations","afterAllSetup","setupIntegration","integrationIndex","setupOnce","setup","on","preprocessEvent","bind","processEvent","assign","convertIntegrationFnToClass","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","inboundFiltersIntegration","_hint","clientOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","_isSentryError","possibleMessages","lastException","_getPossibleEventMessages","string","_isIgnoredError","_isIgnoredTransaction","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","_getLastValidUrl","originalFunctionToString","SETUP_CLIENTS","functionToStringIntegration","originalFunction","supportsFetch","Headers","Request","Response","isNativeFetch","handlers","instrumented","addHandler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","lastHref","addHistoryInstrumentationHandler","instrumentHistory","chromeVar","isChromePackagedApp","app","hasHistoryApi","history","pushState","replaceState","supportsHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","to","DSN_REGEX","dsn","withPassword","host","path","pass","port","projectId","protocol","dsnFromComponents","components","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItems","envelopeItem","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","next","itemHeaders","payload","stringifiedPayload","buffers","totalLength","buf","merged","offset","buffer","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","feedback","statsd","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","SentryError","logLevel","super","setPrototypeOf","ALREADY_SEEN_ERROR","BaseClient","_options","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_hooks","_dsn","lastPath","projectMatch","dsnFromString","find","component","isValidProtocol","parseInt","validateDsn","tunnelOrOptions","tunnel","sdkInfo","_metadata","getBaseApiEndpoint","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","_encodedAuth","getEnvelopeEndpointWithUrlEncodedAuth","_transport","transport","recordDroppedEvent","transportOptions","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","capturedSpanScope","sendSession","getSdkMetadata","getTransport","flush","timeout","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","close","eventProcessor","forceInitialize","_isEnabled","_setupIntegrations","getIntegrationById","integrationId","getIntegrationByName","integrationName","addIntegration","isAlreadyInstalled","sendEvent","env","eventType","packages","enhanceEventWithSdkInfo","envelopeHeaders","sent_at","createEventEnvelopeHeaders","createEventEnvelope","promise","_sendEnvelope","sendResponse","createSessionEnvelope","category","eventOrCount","sendClientReports","count","captureAggregateMetrics","metricBucketItems","metricsEnvelope","tagEntries","entries","maybeTags","unit","metric","metricType","serializeMetricBuckets","createMetricEnvelopeItem","createMetricEnvelope","hook","_updateSessionFromEvent","crashed","errored","exceptions","ex","sessionNonTerminal","Number","ticked","interval","setInterval","clearInterval","_prepareEvent","parentSpanId","_processEvent","finalEvent","sentryError","isTransaction","isTransactionEvent","beforeSendLabel","dataCategory","capturedSpanIsolationScope","__sentry__","beforeSend","beforeSendTransaction","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","spanCount","droppedSpanCount","transactionInfo","transaction_info","send","_clearOutcomes","outcomes","quantity","exceptionFromError","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","getNonErrorObjectExceptionValue","__serialized__","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","captureType","getObjectClassName","ignoreOnError","shouldIgnoreOnError","wrap","before","wrapper","__sentry_wrapped__","sentryWrapped","arguments","wrappedArguments","arg","setTimeout","getOwnPropertyDescriptor","BrowserClient","names","applySdkMetadata","SENTRY_SDK_SOURCE","addEventListener","visibilityState","_flushOutcomes","captureUserFeedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","discarded_events","instrumentConsole","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","globalListener","getEventTarget","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","global","clearTimeout","SENTRY_XHR_DATA_KEY","instrumentXHR","XMLHttpRequest","xhrproto","originalOpen","startTimestamp","e2","parseUrl","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","endTimestamp","xhr","onreadystatechange","readyStateArgs","setRequestHeaderArgs","header","originalSend","sentryXhrData","body","instrumentFetch","EdgeRuntime","fetch","doc","sandbox","createElement","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchArgs","getUrlFromResource","hasProp","parseFetchArgs","handlerData","fetchData","response","resource","validSeverityLevels","query","fragment","search","hash","relative","breadcrumbsIntegration","dom","addConsoleInstrumentationHandler","_getConsoleBreadcrumbHandler","componentName","serializeAttribute","element","_isEvent","_getDomBreadcrumbHandler","addXhrInstrumentationHandler","_getXhrBreadcrumbHandler","addFetchInstrumentationHandler","_getFetchBreadcrumbHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","lineno","colno","currentFingerprint","previousFingerprint","_oldOnErrorHandler","instrumentError","onerror","msg","column","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","instrumentUnhandledRejection","onunhandledrejection","globalHandlersIntegration","stackTraceLimit","ERROR_TYPES_RE","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","addGlobalErrorInstrumentationHandler","_installGlobalOnErrorHandler","globalHandlerLog","_getUnhandledRejectionError","addGlobalUnhandledRejectionInstrumentationHandler","_installGlobalOnUnhandledRejectionHandler","ev","ev0","ev0s","ev0sf","in_app","httpContextIntegration","referrer","Referer","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","maxValueLimit","limit","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","parent_id","linkedErrorsIntegration","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","originalCallback","wrapOptions","globalObject","eventName","handleEvent","wrappedEventHandler","originalEventHandler","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackLineParsers","subMatch","extractSafariExtensionDetails","defaultStackParser","isSafariExtension","isSafariWebExtension","createTransport","makeRequest","remove","task","taskProducer","drain","counter","capturedSetTimeout","makePromiseBuffer","bufferSize","rateLimits","filteredEnvelopeItems","limits","all","disabledUntil","isRateLimited","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","namespaces","headerDelay","delay","headerDate","parse","parseRetryAfterHeader","updateRateLimits","__sentry__baseTransport__","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","makeXHRTransport","getResponseHeader","open","setRequestHeader","debug","ENVIRONMENT","__SENTRY_RELEASE__","SENTRY_RELEASE","autoSessionTracking","clientClass","initialScope","setCurrentClient","initializeClient","initAndBind","Sentry","tracesSampleRate","replaysSessionSampleRate","replaysOnErrorSampleRate","getManifest","freeze","LicenseStateUnknown","LicenseStateFree","LicenseStateTrial","LicenseStateTrialExpired","LicenseStateLicensed","LicenseStateLicenseExpired","LicenseStateLicenseGrace","MALWARE","FULL_URL_MALWARE","SUSPICIOUS_PAGE","SUSPICIOUS_TLD","RISKY_PATTERN","SUSPICIOUS_CONTENT","MALWARE_PATTERN","ALERT_LOOP","AUTH_REQUIRED_LOOP","CREATE_URL_LOOP","EXTENSION_INSTALL","FULL_SCREEN_LOOP","HISTORY_LOOP","NOTIFICATION_LOOP","PRINT_LOOP","ADWARE","REPUTATION","TROJAN","MALVERTISING","WORM","RANSOMWARE","ROOTKIT","BACKDOOR","SPYWARE","ALLOWED_EXCLUSION_VALUE","SCAM","TSS","SCAM_HEURISTIC","PHISHING","PHISHING_SUSPICIOUS_POST","PHISHING_BANKING","PHISHING_LOGIN","PHISHING_LOGIN_VIA_TUNNEL","TELEMETRY_PHISHING_TUNNEL","AD","ADSERVER","ADS","SAFARI","origins","permissions","optional_permissions","RegExp","Chrome","Firefox","Edge","Safari","clipboardRead","title","clipboardWrite","alarms","downloads","storage","tabs","declarativeNetRequest","declarativeNetRequestFeedback","unlimitedStorage","webRequest","contextMenus","nativeMessaging","offscreen","activeTab","i18n","getUILanguage","translateText","nodes","sub","getElementById","textContent","getMessage","bgVersionMem","bgVersion","querySelector","classList","downloadImage","downloadStatusTxt","downloadProgressBar","downloadProgressPercentage","downloadErrorFooter","sendMessage","fullLog","resp","logDataStr","logData","createObjectURL","Blob","dlDownloadName","time","getHours","getMinutes","getSeconds","conflictAction","download","catch","onChanged","addListener","current","revokeObjectURL","downloadLogsToFile"],"sourceRoot":""}